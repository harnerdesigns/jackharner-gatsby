{"version":3,"file":"component---src-pages-affiliate-js-b01802f60b3338c60c73.js","mappings":"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","sources":["webpack://jackharner-gatsby/./src/components/atoms/drips.js","webpack://jackharner-gatsby/./src/components/pageTitle.js","webpack://jackharner-gatsby/./src/pages/affiliate.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Drips = ({ color, slim, wrapperHeight, svgWidth, numberPoints = 21 }) => {\n  const wrapperRef = useRef()\n  const [path, setPath] = useState(\"\")\n  const [built, setBuilt] = useState(false)\n  const [dim, setDim] = useState({ w: 0, h: 0 })\n  useEffect(() => {\n    if (!built) {\n      setPath(buildPath(calculateWavePoints(1)))\n      setBuilt(true)\n    }\n  }, [built])\n\n  let calculateWavePoints = () => {\n    var points = []\n    var pointCount = numberPoints\n    var width = 1080\n    var height = 1080\n\n    setDim({ w: width, h: height })\n\n    for (var i = 0; i <= pointCount; i++) {\n      var waveHeight = height - ((height / 2) * Math.random() + 50)\n      points.push({ x: i * (width / pointCount), y: waveHeight })\n    }\n\n    console.log({ points })\n\n    return points\n  }\n\n  let buildPath = points => {\n    var width = 1080\n    var height = 1080\n\n    setDim({ w: width, h: height })\n\n    var SVGString = \"M \" + points[0].x + \" \" + points[0].y\n\n    var cp = {\n      x: (points[1].x + points[0].x) / 2,\n      y: points[0].y,\n    }\n\n    var cp0 = {\n      x: (points[1].x + points[0].x) / 2,\n      y: points[1].y,\n    }\n\n    SVGString +=\n      \" C \" +\n      cp.x +\n      \" \" +\n      cp.y +\n      \" \" +\n      cp0.x +\n      \" \" +\n      cp0.y +\n      \" \" +\n      points[1].x +\n      \" \" +\n      points[1].y\n\n    var prevCp = cp0\n    // var inverted = -1;\n\n    for (var i = 1; i < points.length - 1; i++) {\n      var cp1 = {\n        x: (points[i + 1].x + points[i].x) / 2,\n        y: points[i].y,\n      }\n\n      var cp2 = {\n        x: (points[i + 1].x + points[i].x) / 2,\n        y: points[i + 1].y,\n      }\n\n      SVGString +=\n        \" C \" +\n        cp1.x +\n        \" \" +\n        cp1.y +\n        \" \" +\n        cp2.x +\n        \" \" +\n        cp2.y +\n        \" \" +\n        points[i + 1].x +\n        \" \" +\n        points[i + 1].y\n      prevCp = cp1\n      // inverted = -inverted;\n    }\n\n    SVGString += \" L \" + width + \" \" + height\n    SVGString += \" L 0 \" + height + \" Z\"\n    return SVGString\n  }\n  return (\n    <div\n      ref={wrapperRef}\n      id=\"svgWrapper\"\n      className={slim ? \"slim\" : \"\"}\n      style={{ height: wrapperHeight ? wrapperHeight : \"\" }}\n    >\n      <svg\n        preserveAspectRatio=\"none\"\n        viewBox={`0 0 ${dim.w} ${dim.h}`}\n        style={{ width: svgWidth ? svgWidth : \"\" }}\n      >\n        <path id=\"wave\" d={path} fill={color} />\n      </svg>\n    </div>\n  )\n}\n\nexport default Drips\n","/**\n * PageTitle component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Drips from \"./atoms/drips\"\n\nconst PageTitle = ({ children, subtitle = \"\" }) => {\n\n  return (\n    <header className=\"page-title slim pink\" >\n      <Drips color=\"black\" slim/>\n\n      <h1>{children}</h1>\n      {subtitle && <h2>{subtitle}</h2>}\n    </header>\n  )\n}\n\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default PageTitle\n","import React from \"react\"\nimport Drips from \"../components/atoms/drips\"\n\nimport Layout from \"../components/layout\"\nimport PageTitle from \"../components/pageTitle\"\nimport SEO from \"../components/seo\"\nimport Shuffler from \"../components/verts/shuffler\"\n\nconst verts = () => {\n  return (\n    <Layout>\n      <SEO title=\"Affiliate Links\" />\n      <section className=\"slim pink full-width\">\n        <PageTitle>My Affiliate Links</PageTitle>\n      </section>\n      <section className=\"slim content black\">\n        <h3>\n          If you want to help support Me and My Content, feel free to check out\n          some of the places I'm an affiliate for.\n        </h3>\n        <p>\n          If you click through any of these links and make a purchase, I get a\n          percentage of your purchase total at no extra cost to you. I only\n          affiliate with companies that I personally use and can vouch for.\n        </p>\n      </section>\n      <section className=\"half verts black\">\n        <Shuffler index={0} />\n\n        <Shuffler index={1} />\n\n        <Shuffler index={2} />\n\n        <Shuffler index={3} />\n\n        <Shuffler index={4} />\n\n        <Shuffler index={5} />\n\n        <Shuffler index={6} />\n\n        <Shuffler index={7} />\n      </section>\n    </Layout>\n  )\n}\n\nexport default verts\n"],"names":["color","slim","wrapperHeight","svgWidth","numberPoints","wrapperRef","useRef","useState","path","setPath","built","setBuilt","w","h","dim","setDim","useEffect","buildPath","calculateWavePoints","points","pointCount","height","i","waveHeight","Math","random","push","x","y","console","log","SVGString","cp","cp0","length","cp1","cp2","ref","id","className","style","preserveAspectRatio","viewBox","width","d","fill","children","subtitle","title","index"],"sourceRoot":""}