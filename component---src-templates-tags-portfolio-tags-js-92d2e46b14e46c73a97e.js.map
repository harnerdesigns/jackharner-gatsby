{"version":3,"sources":["webpack:///./src/templates/tags/portfolio-tags.js","webpack:///./src/components/atoms/drips.js","webpack:///./src/templates/tags/tag-icons.js","webpack:///./src/components/pageTitle.js"],"names":["_","require","TagRoute","render","posts","this","props","data","allMarkdownRemark","edges","tags","pageContext","topTags","sortedTags","Object","keys","sort","a","b","console","log","title","className","map","tag","index","tagLink","kebabCase","to","fixedWidth","icon","tagIcons","filter","node","frontmatter","includes","slice","post","logo","style","background","color","src","publicURL","alt","subtitle","React","Component","tagPageQuery","Drips","slim","wrapperHeight","svgWidth","numberPoints","wrapperRef","useRef","useState","path","setPath","built","setBuilt","w","h","dim","setDim","useEffect","buildPath","calculateWavePoints","points","pointCount","i","waveHeight","height","Math","random","push","x","y","SVGString","cp","cp0","length","cp1","cp2","ref","id","preserveAspectRatio","viewBox","width","d","fill","Git","BigCommerce","Node","HTML","Firefox","WordPress","Twitter","Linux","JavaScript","Automation","Tutorial","Gatsby","PHP","CSS","CodePen","Markdown","Netlify","AJAX","Webpack","Photography","Animation","History","Newsletter","Python","Shopify","Writing","Cannabis","Career","Freelance","DigitalOcean","PageTitle","children"],"mappings":"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","file":"component---src-templates-tags-portfolio-tags-js-92d2e46b14e46c73a97e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport PageTitle from \"../../components/pageTitle\"\nimport SEO from \"../../components/seo\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport tagIcons from \"./tag-icons\"\nconst _ = require(\"lodash\")\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const tags = this.props.pageContext.topTags\n\n    var sortedTags = Object.keys(tags).sort(function(a, b) {\n      return tags[a] < tags[b]\n    })\n\n    console.log(sortedTags)\n\n    return (\n      <Layout>\n          <SEO title=\"Project Tags\" />\n\n          <PageTitle>Project Tags</PageTitle>\n\n          <main className=\"page_body page_body--grid\">\n            <div className=\"tag-grid\">\n              {sortedTags.map((tag, index) => {\n                const tagLink = `/portfolio/tags/${_.kebabCase(tag)}/`\n                return (\n                  <Link to={tagLink} className=\"tag__card\">\n                      <FontAwesomeIcon fixedWidth icon={tagIcons[tag]} />\n                    <h3>\n                      {tag}\n                    </h3>\n                    <h4>\n                      {tags[tag]} Project{tags[tag] > 1 ? \"s\" : \"\"}\n                    </h4>\n                    <div className=\"tag__post-preview tag__post-preview--portfolio\">\n                      {posts\n                        .filter(({ node: post }) =>\n                          post.frontmatter.tags.includes(tag)\n                        )\n                        .slice(0, 3)\n                        .map(({ node: post }) => {\n                          if (post.frontmatter.logo) {\n                            return (\n                              <div\n                                style={{ background: post.frontmatter.color }}\n                              >\n                                <img\n                                  src={post.frontmatter.logo.publicURL}\n                                  alt={\n                                    post.frontmatter.title +\n                                   (post.frontmatter.subtitle ? \" | \" +\n                                    post.frontmatter.subtitle : \"\")\n                                  }\n                                  title={\n                                    post.frontmatter.title +\n                                    (post.frontmatter.subtitle ? \" | \" +\n                                     post.frontmatter.subtitle : \"\")\n                                  }\n                                />\n                              </div>\n                            )\n                          } else {return null}\n                        })}\n                    </div>\n                  </Link>\n                )\n              })}\n            </div>\n          </main>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query PortfolioTagsPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: {\n        fields: [fields___weight, frontmatter___date]\n        order: [DESC, DESC]\n      }\n      filter: {\n        fields: { published: { eq: true }, collection: { eq: \"portfolio\" }, unlisted: { ne: true } }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            subtitle\n            description\n            color\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            logo {\n              extension\n              publicURL\n            }\n          }\n          fields {\n            slug\n            collection\n            weight\n            unlisted\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { useState, useEffect, useRef } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Drips = ({ color, slim, wrapperHeight, svgWidth, numberPoints = 21 }) => {\n  const wrapperRef = useRef()\n  const [path, setPath] = useState(\"\")\n  const [built, setBuilt] = useState(false)\n  const [dim, setDim] = useState({ w: 0, h: 0 })\n  useEffect(() => {\n    if (!built) {\n      setPath(buildPath(calculateWavePoints(1)))\n      setBuilt(true)\n    }\n  }, [built])\n\n  let calculateWavePoints = () => {\n    var points = []\n    var pointCount = numberPoints\n    var width = 1080\n    var height = 1080\n\n    setDim({ w: width, h: height })\n\n    for (var i = 0; i <= pointCount; i++) {\n      var waveHeight = height - ((height / 2) * Math.random() + 50)\n      points.push({ x: i * (width / pointCount), y: waveHeight })\n    }\n\n    console.log({ points })\n\n    return points\n  }\n\n  let buildPath = points => {\n    var width = 1080\n    var height = 1080\n\n    setDim({ w: width, h: height })\n\n    var SVGString = \"M \" + points[0].x + \" \" + points[0].y\n\n    var cp = {\n      x: (points[1].x + points[0].x) / 2,\n      y: points[0].y,\n    }\n\n    var cp0 = {\n      x: (points[1].x + points[0].x) / 2,\n      y: points[1].y,\n    }\n\n    SVGString +=\n      \" C \" +\n      cp.x +\n      \" \" +\n      cp.y +\n      \" \" +\n      cp0.x +\n      \" \" +\n      cp0.y +\n      \" \" +\n      points[1].x +\n      \" \" +\n      points[1].y\n\n    var prevCp = cp0\n    // var inverted = -1;\n\n    for (var i = 1; i < points.length - 1; i++) {\n      var cp1 = {\n        x: (points[i + 1].x + points[i].x) / 2,\n        y: points[i].y,\n      }\n\n      var cp2 = {\n        x: (points[i + 1].x + points[i].x) / 2,\n        y: points[i + 1].y,\n      }\n\n      SVGString +=\n        \" C \" +\n        cp1.x +\n        \" \" +\n        cp1.y +\n        \" \" +\n        cp2.x +\n        \" \" +\n        cp2.y +\n        \" \" +\n        points[i + 1].x +\n        \" \" +\n        points[i + 1].y\n      prevCp = cp1\n      // inverted = -inverted;\n    }\n\n    SVGString += \" L \" + width + \" \" + height\n    SVGString += \" L 0 \" + height + \" Z\"\n    return SVGString\n  }\n  return (\n    <div\n      ref={wrapperRef}\n      id=\"svgWrapper\"\n      className={slim ? \"slim\" : \"\"}\n      style={{ height: wrapperHeight ? wrapperHeight : \"\" }}\n    >\n      <svg\n        preserveAspectRatio=\"none\"\n        viewBox={`0 0 ${dim.w} ${dim.h}`}\n        style={{ width: svgWidth ? svgWidth : \"\" }}\n      >\n        <path id=\"wave\" d={path} fill={color} />\n      </svg>\n    </div>\n  )\n}\n\nexport default Drips\n","const tagIcons = {\n  Git: [\"fab\", \"git-alt\"],\n  BigCommerce: \"shopping-cart\",\n  Node: [\"fab\", \"node-js\"],\n  HTML: [\"fab\", \"html5\"],\n  Firefox: [\"fab\", \"firefox-browser\"],\n  WordPress: [\"fab\", \"wordpress\"],\n  React: [\"fab\", \"react\"],\n  Twitter: [\"fab\", \"twitter\"],\n  \"Raspberry Pi\": [\"fab\", \"raspberry-pi\"],\n  Linux: [\"fab\", \"linux\"],\n  \"#DevDiscuss\": [\"fab\", \"dev\"],\n  JavaScript: [\"fab\", \"js\"],\n  \"Build Log\": \"tools\",\n  Automation: \"cogs\",\n  Tutorial: \"lightbulb\",\n  \"Open Source\": \"folder-open\",\n  Gatsby: \"glass-martini-alt\",\n  PHP: [\"fab\", \"php\"],\n  CSS: [\"fab\", \"css3-alt\"],\n  CodePen: [\"fab\", \"codepen\"],\n  Markdown: [\"fab\", \"markdown\"],\n  Netlify: \"project-diagram\",\n  AJAX: \"cloud-download-alt\",\n  \"Life Hacks\": \"hammer\",\n  \"Material Design\": \"palette\",\n  Webpack: \"box\",\n  Photography: \"camera\",\n  Animation: \"circle-notch\",\n  History: \"calendar\",\n  Newsletter: \"envelope\",\n  Python: [\"fab\", \"python\"],\n  Shopify: [\"fab\", \"shopify\"],\n  \"E-Commerce\": 'shopping-bag',\n  \"Code Snippets\": 'code',\n  Writing: \"pencil-alt\",\n  \"Non Profit\": \"tree\",\n  Cannabis: \"cannabis\",\n  Career: \"user-astronaut\",\n  Freelance: \"bacon\",\n  DigitalOcean: [\"fab\", \"digital-ocean\"]\n}\n\nexport default tagIcons\n","/**\n * PageTitle component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Drips from \"./atoms/drips\"\n\nconst PageTitle = ({ children, subtitle = \"\" }) => {\n\n  return (\n    <header className=\"page-title slim pink\" >\n      <Drips color=\"black\" slim/>\n\n      <h1>{children}</h1>\n      {subtitle && <h2>{subtitle}</h2>}\n    </header>\n  )\n}\n\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default PageTitle\n"],"sourceRoot":""}