{"version":3,"sources":["webpack:///./src/templates/tags/portfolio-tags.js","webpack:///./src/templates/tags/tag-icons.js","webpack:///./src/components/pageTitle.js"],"names":["_","require","TagRoute","render","posts","this","props","data","allMarkdownRemark","edges","tags","pageContext","topTags","sortedTags","Object","keys","sort","a","b","console","log","className","title","map","tag","index","tagLink","kebabCase","to","fixedWidth","icon","tagIcons","filter","node","frontmatter","includes","slice","post","logo","style","background","color","src","publicURL","alt","subtitle","React","Component","tagPageQuery","Git","BigCommerce","Node","HTML","Firefox","WordPress","Twitter","Linux","JavaScript","Automation","Tutorial","Gatsby","PHP","CSS","CodePen","Markdown","Netlify","AJAX","Webpack","Photography","Animation","History","Newsletter","Python","Shopify","Writing","Cannabis","Career","PageTitle","children"],"mappings":"6PAOMA,EAAIC,EAAQ,QAEZC,E,kGACJC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC1CC,EAAOL,KAAKC,MAAMK,YAAYC,QAEhCC,EAAaC,OAAOC,KAAKL,GAAMM,MAAK,SAASC,EAAGC,GAClD,OAAOR,EAAKO,GAAKP,EAAKQ,MAKxB,OAFAC,QAAQC,IAAIP,GAGV,kBAAC,IAAD,KACE,6BAASQ,UAAU,WACjB,kBAAC,IAAD,CAAKC,MAAM,iBAEX,kBAAC,IAAD,qBAEA,0BAAMD,UAAU,6BACd,yBAAKA,UAAU,YACZR,EAAWU,KAAI,SAACC,EAAKC,GACpB,IAAMC,EAAO,mBAAsB1B,EAAE2B,UAAUH,GAAlC,IACb,OACE,kBAAC,OAAD,CAAMI,GAAIF,EAASL,UAAU,aAC3B,4BACE,kBAAC,IAAD,CAAiBQ,YAAU,EAACC,KAAMC,IAASP,KAC1CA,GACG,IACN,4BACGd,EAAKc,GADR,WACsBd,EAAKc,GAAO,EAAI,IAAM,IAE5C,yBAAKH,UAAU,kDACZjB,EACE4B,QAAO,qBAAGC,KACJC,YAAYxB,KAAKyB,SAASX,MAEhCY,MAAM,EAAG,GACTb,KAAI,YAAqB,IAAZc,EAAW,EAAjBJ,KACN,OAAII,EAAKH,YAAYI,KAEjB,yBACEC,MAAO,CAAEC,WAAYH,EAAKH,YAAYO,QAEtC,yBACEC,IAAKL,EAAKH,YAAYI,KAAKK,UAC3BC,IACEP,EAAKH,YAAYZ,OACjBe,EAAKH,YAAYW,SAAW,MAC5BR,EAAKH,YAAYW,SAAW,IAE9BvB,MACEe,EAAKH,YAAYZ,OAChBe,EAAKH,YAAYW,SAAW,MAC5BR,EAAKH,YAAYW,SAAW,OAKxB,kB,GA1DlBC,IAAMC,WAwEd7C,YAER,IAAM8C,EAAY,c,kCC1CVjB,IAzCE,CACfkB,IAAK,CAAC,MAAO,WACbC,YAAa,gBACbC,KAAM,CAAC,MAAO,WACdC,KAAM,CAAC,MAAO,SACdC,QAAS,CAAC,MAAO,mBACjBC,UAAW,CAAC,MAAO,aACnBR,MAAO,CAAC,MAAO,SACfS,QAAS,CAAC,MAAO,WACjB,eAAgB,CAAC,MAAO,gBACxBC,MAAO,CAAC,MAAO,SACf,cAAe,CAAC,MAAO,OACvBC,WAAY,CAAC,MAAO,MACpB,YAAa,QACbC,WAAY,OACZC,SAAU,YACV,cAAe,cACfC,OAAQ,oBACRC,IAAK,CAAC,MAAO,OACbC,IAAK,CAAC,MAAO,YACbC,QAAS,CAAC,MAAO,WACjBC,SAAU,CAAC,MAAO,YAClBC,QAAS,kBACTC,KAAM,qBACN,aAAc,SACd,kBAAmB,UACnBC,QAAS,MACTC,YAAa,SACbC,UAAW,eACXC,QAAS,WACTC,WAAY,WACZC,OAAQ,CAAC,MAAO,UAChBC,QAAS,CAAC,MAAO,WACjB,aAAc,eACd,gBAAiB,OACjBC,QAAS,aACT,aAAc,OACdC,SAAU,WACVC,OAAQ,mB,kCCtCV,yBAwBeC,IAdG,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAA8B,IAApBjC,gBAAoB,MAAT,GAAS,EACjD,OACE,4BAAQxB,UAAU,cAChB,4BAAKyD,GAEJjC,GAAY,4BAAKA","file":"component---src-templates-tags-portfolio-tags-js-71bf6e26f18bcaaf2970.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport PageTitle from \"../../components/pageTitle\"\nimport SEO from \"../../components/seo\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport tagIcons from \"./tag-icons\"\nconst _ = require(\"lodash\")\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const tags = this.props.pageContext.topTags\n\n    var sortedTags = Object.keys(tags).sort(function(a, b) {\n      return tags[a] < tags[b]\n    })\n\n    console.log(sortedTags)\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <SEO title=\"Project Tags\" />\n\n          <PageTitle>Project Tags</PageTitle>\n\n          <main className=\"page_body page_body--grid\">\n            <div className=\"tag-grid\">\n              {sortedTags.map((tag, index) => {\n                const tagLink = `/portfolio/tags/${_.kebabCase(tag)}/`\n                return (\n                  <Link to={tagLink} className=\"tag__card\">\n                    <h3>\n                      <FontAwesomeIcon fixedWidth icon={tagIcons[tag]} />\n                      {tag}\n                    </h3>{\" \"}\n                    <h4>\n                      {tags[tag]} Project{tags[tag] > 1 ? \"s\" : \"\"}\n                    </h4>\n                    <div className=\"tag__post-preview tag__post-preview--portfolio\">\n                      {posts\n                        .filter(({ node: post }) =>\n                          post.frontmatter.tags.includes(tag)\n                        )\n                        .slice(0, 3)\n                        .map(({ node: post }) => {\n                          if (post.frontmatter.logo) {\n                            return (\n                              <div\n                                style={{ background: post.frontmatter.color }}\n                              >\n                                <img\n                                  src={post.frontmatter.logo.publicURL}\n                                  alt={\n                                    post.frontmatter.title +\n                                   (post.frontmatter.subtitle ? \" | \" +\n                                    post.frontmatter.subtitle : \"\")\n                                  }\n                                  title={\n                                    post.frontmatter.title +\n                                    (post.frontmatter.subtitle ? \" | \" +\n                                     post.frontmatter.subtitle : \"\")\n                                  }\n                                />\n                              </div>\n                            )\n                          } else {return null}\n                        })}\n                    </div>\n                  </Link>\n                )\n              })}\n            </div>\n          </main>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query PortfolioTagsPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: { published: { eq: true }, collection: { eq: \"portfolio\" } }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            subtitle\n            description\n            color\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            logo {\n              extension\n              publicURL\n            }\n          }\n          fields {\n            slug\n            collection\n          }\n        }\n      }\n    }\n  }\n`\n","const tagIcons = {\n  Git: [\"fab\", \"git-alt\"],\n  BigCommerce: \"shopping-cart\",\n  Node: [\"fab\", \"node-js\"],\n  HTML: [\"fab\", \"html5\"],\n  Firefox: [\"fab\", \"firefox-browser\"],\n  WordPress: [\"fab\", \"wordpress\"],\n  React: [\"fab\", \"react\"],\n  Twitter: [\"fab\", \"twitter\"],\n  \"Raspberry Pi\": [\"fab\", \"raspberry-pi\"],\n  Linux: [\"fab\", \"linux\"],\n  \"#DevDiscuss\": [\"fab\", \"dev\"],\n  JavaScript: [\"fab\", \"js\"],\n  \"Build Log\": \"tools\",\n  Automation: \"cogs\",\n  Tutorial: \"lightbulb\",\n  \"Open Source\": \"folder-open\",\n  Gatsby: \"glass-martini-alt\",\n  PHP: [\"fab\", \"php\"],\n  CSS: [\"fab\", \"css3-alt\"],\n  CodePen: [\"fab\", \"codepen\"],\n  Markdown: [\"fab\", \"markdown\"],\n  Netlify: \"project-diagram\",\n  AJAX: \"cloud-download-alt\",\n  \"Life Hacks\": \"hammer\",\n  \"Material Design\": \"palette\",\n  Webpack: \"box\",\n  Photography: \"camera\",\n  Animation: \"circle-notch\",\n  History: \"calendar\",\n  Newsletter: \"envelope\",\n  Python: [\"fab\", \"python\"],\n  Shopify: [\"fab\", \"shopify\"],\n  \"E-Commerce\": 'shopping-bag',\n  \"Code Snippets\": 'code',\n  Writing: \"pencil-alt\",\n  \"Non Profit\": \"tree\",\n  Cannabis: \"cannabis\",\n  Career: \"user-astronaut\"\n}\n\nexport default tagIcons\n","/**\n * PageTitle component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst PageTitle = ({ children, subtitle = \"\" }) => {\n  return (\n    <header className=\"page-title\">\n      <h1>{children}</h1>\n\n      {subtitle && <h2>{subtitle}</h2>}\n    </header>\n  )\n}\n\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default PageTitle\n"],"sourceRoot":""}