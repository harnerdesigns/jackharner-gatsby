{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/bigcommerce-stencil-ci-cd-with-github-actions//","result":{"data":{"site":{"siteMetadata":{"title":"Jack Harner","description":"Jack Harner is a Freelance Web Developer & E-Commerce Consultant based in Denver, Colorado. Shopify, BigCommerce, WordPress Dev & More.","author":"@jackharner","siteUrl":"https://jackharner.com"}},"markdownRemark":{"html":"<p>Post Updated November 21st, 2022 to work with Stencil-CLI >5.x</p>\n<p>Back in November 2019, GitHub released GitHub Actions. An <a href=\"https://github.blog/2019-08-08-github-actions-now-supports-ci-cd/\">\"API for cause and effect\"</a> they called it.</p>\n<p>Basically, GitHub Actions allow you to program things to happen when other things happen to your repo. For example, running tests on Pull Requests as they come in, or <a href=\"https://dev.to/gautamkrishnar/show-your-latest-dev-to-posts-automatically-in-your-github-profile-readme-3nk8\">updating your GitHub Profile Readme with your latest DEV posts</a>.</p>\n<p>Today I'm going to walk you through using GitHub Actions to publish your BigCommerce Stencil Theme automatically.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#what-is-cicd\">What is CI/CD?</a></li>\n<li><a href=\"#bye-bye-bitbucket-pipelines\">Bye Bye Bitbucket Pipelines.</a></li>\n<li><a href=\"#folder-structure\">Folder Structure</a></li>\n<li><a href=\"#configuration\">Configuration</a></li>\n<li><a href=\"#thats-all-folks\">That's All Folks</a></li>\n<li><a href=\"#the-full-code\">The Full Code</a></li>\n<li><a href=\"#taking-the-bigcommerce-cicd-flow-a-step-further\">Taking The BigCommerce CI/CD Flow A Step Further</a></li>\n</ul>\n</div>\n<h2 id=\"what-is-cicd\" style=\"position:relative;\"><a href=\"#what-is-cicd\" aria-label=\"what is cicd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is CI/CD?</h2>\n<p>CI/CD stands for Continuous Integration / Continuous Delivery. CI/CD is a coding philosophy that allows teams to publish changes often, without the daunting task of pushing to production manually.  Setting up a solid CI/CD Pipeline will save you and your team plenty of hours over the course of the project to make up for the initial time setting it up.</p>\n<h2 id=\"bye-bye-bitbucket-pipelines\" style=\"position:relative;\"><a href=\"#bye-bye-bitbucket-pipelines\" aria-label=\"bye bye bitbucket pipelines permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bye Bye Bitbucket Pipelines.</h2>\n<p>The first iteration I tried for CI/CD on my Stencil Theme came from <a href=\"https://medium.com/bigcommerce-developer-blog/how-to-level-up-your-development-workflow-with-continuous-delivery-3a6493cc1d13\">this article</a> from BigCommerce. It talks about how to utilize BitBucket Pipelines to Auto-deploy your theme. I was storing our theme on BitBucket anyway because this was before GitHub offered free private repos, so it ended up working perfectly.</p>\n<p>Once GitHub allowed Free Private Repos for individuals (and eventually teams), I decided to move all of our repos back. I still wanted the CI/CD benefits of BitBucket Pipelines so I dove into GitHub Actions to see if I could make it work.</p>\n<h2 id=\"folder-structure\" style=\"position:relative;\"><a href=\"#folder-structure\" aria-label=\"folder structure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Folder Structure</h2>\n<p>The first thing you need to do to setup GitHub Actions is create a hidden folder called <code class=\"language-text\">.github</code> (note the period at the beginning) in the root of your theme. Inside that folder create one more folder called <code class=\"language-text\">workflows</code>. Now create a file in <code class=\"language-text\">/.github/workflows/</code> called <code class=\"language-text\">main.yml</code>.</p>\n<p>This YAML (a recursive acronym that stands for YAML Ain't Markup Language) file is what tells GitHub what to do, when to do it, &#x26; what to do it with.</p>\n<p>{{{vert}}}</p>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>I've included the full code down below, but I'm going to walk through each piece so you understand what's happening and how to adjust it for your specific use case.</p>\n<h3 id=\"name-it\" style=\"position:relative;\"><a href=\"#name-it\" aria-label=\"name it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Name It</h3>\n<p>First things first, we've got to name this bad boi. Start your <code class=\"language-text\">main.yml</code> file off with the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Push Stencil Theme To BigCommerce.</code></pre></div>\n<p>This defines the name of the Workflow that you are creating and shows up on GitHub each time the workflow runs.</p>\n<h3 id=\"main-branch-only\" style=\"position:relative;\"><a href=\"#main-branch-only\" aria-label=\"main branch only permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Main Branch Only</h3>\n<p>In order to save build minutes, we only want to run the workflow when something is pushed to the <code class=\"language-text\">main</code> branch. For that, add the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main</code></pre></div>\n<p>The <code class=\"language-text\">on</code> option allows you to specify when to run the workflow. There are about 25 different events that you can configure workflows for, <a href=\"https://docs.github.com/en/actions/reference/events-that-trigger-workflows\">check out the full list here</a>.</p>\n<h3 id=\"get-a-job-you-bum\" style=\"position:relative;\"><a href=\"#get-a-job-you-bum\" aria-label=\"get a job you bum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get A JOB You BUM!</h3>\n<p>The next thing we need to do is create the Job. This is where all the magic happens inside the Workflow.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Stencil Push\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span> </code></pre></div>\n<p>Let's break that block down even further.</p>\n<ol>\n<li><code class=\"language-text\">jobs:</code> - This line defines an array so you can run multiple different jobs at a time.</li>\n<li><code class=\"language-text\">build:</code> - This is the ID for the job we are setting up. You can use the ID to reference jobs from other jobs, for example, to check if the first job exited a specific way.</li>\n<li><code class=\"language-text\">name: Stencil Push</code> - Pretty self-explanatory. Defines the name of the job.</li>\n<li><code class=\"language-text\">runs-on: ubuntu-latest</code> - This allows you to configure the OS of the computer that will be processing your Job. You can choose between Linux, Windows, And Mac Operating Systems, depending on your needs.</li>\n<li><code class=\"language-text\">steps:</code>  This starts the Steps array where you configure everything that happens inside the job.</li>\n</ol>\n<h3 id=\"step-it-up\" style=\"position:relative;\"><a href=\"#step-it-up\" aria-label=\"step it up permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>STEP It Up</h3>\n<p>Jobs have multiple steps, just like workflows can have multiple jobs. The big difference is that steps run sequentially, waiting for one to finish before the next step starts.</p>\n<h4 id=\"check-it-out\" style=\"position:relative;\"><a href=\"#check-it-out\" aria-label=\"check it out permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Check It Out.</h4>\n<p>First things first we have to checkout the repository. If you're unfamiliar with Docker, basically you're spinning up a new blank virtual machine every time your job runs. In order to manipulate the files you need to get them first. Luckily, GitHub Actions comes with a pre-configured set of tools to do simple things like that:</p>\n<p>Start off your <code class=\"language-text\">steps</code> array with <strong>Step 1</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1</code></pre></div>\n<p>The <code class=\"language-text\">uses</code> attribute in this step allows you to run other GitHub Actions inside your Action. This allows things to be modular and reusable. Check out <a href=\"https://github.com/actions\">GitHub.com/actions</a> for more info.</p>\n<h4 id=\"node-v14-only\" style=\"position:relative;\"><a href=\"#node-v14-only\" aria-label=\"node v14 only permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node v14 Only</h4>\n<p>Since BigCommerce Stencil requires Node 14, <strong>Step 2</strong> involves installing the specific version of node we need:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n  \n  <span class=\"token punctuation\">...</span>\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set Node version to 14\n    <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n    <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">14</span></code></pre></div>\n<p>On this step we now have the <code class=\"language-text\">with</code> attribute. This allows you to pass configuration options to your \"Uses\" actions. In this case we define <code class=\"language-text\">node-version</code> as <code class=\"language-text\">14</code> since that's what we need for the Stencil CLI to work.</p>\n<h4 id=\"install-dependencies\" style=\"position:relative;\"><a href=\"#install-dependencies\" aria-label=\"install dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install Dependencies</h4>\n<p><strong>Step 3</strong> is kind of a 2 for 1 deal. With the <code class=\"language-text\">run</code> attribute on the step you can run console commands. The pipe <code class=\"language-text\">|</code> is used to start off a multi line command. Install the Stencil Cli first, and then run whichever package manager you use. In my case it's Yarn.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n  \n  <span class=\"token punctuation\">...</span>\n  \n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n    <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n      npm install -g @bigcommerce/stencil-cli\n      yarn</span></code></pre></div>\n<p>{{{vert}}}</p>\n<h4 id=\"configure-stencil-cli\" style=\"position:relative;\"><a href=\"#configure-stencil-cli\" aria-label=\"configure stencil cli permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Stencil CLI</h4>\n<blockquote>\n<p>Update as of 2022: <code class=\"language-text\">stencil init</code> now has all of the flags available to run through CI. The original setup involved storing the entire contents of the .stencil file as a secret in the repo.</p>\n</blockquote>\n<p>We need to add a couple secrets to the repo to keep our Stencil CLI Access Token secure. Open up your Repo and click <code class=\"language-text\">Settings > Secrets &amp; Variables > Actions > New Repository Secret</code>. Name the first one <code class=\"language-text\">STENCIL_STORE_URL</code> and paste in your store's mybigcommerce.com url (i.e. <code class=\"language-text\">https://store-xxxxxxxxxx.mybigcommerce.com</code> ). Save that secret and add a second one called <code class=\"language-text\">STENCIL_ACCESS_TOKEN</code> with your Stencil CLI Access Token as the value. GitHub Secrets allow you to use sensitive data in your Actions without exposing it to the world.</p>\n<p>Once again we'll use Step Environment Variables to send our secrets to the <code class=\"language-text\">stencil init</code> command to generate the <code class=\"language-text\">secrets.stencil.json</code> and <code class=\"language-text\">config.stencil.json</code> files used connect the CI runner to our specific BigCommerce store:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n\n  <span class=\"token punctuation\">...</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Connect to store\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">URL</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.STENCIL_STORE_URL <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.STENCIL_ACCESS_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> stencil init <span class=\"token punctuation\">-</span>u $URL <span class=\"token punctuation\">-</span>t $TOKEN <span class=\"token punctuation\">-</span>p 3000 <span class=\"token punctuation\">-</span>h https<span class=\"token punctuation\">:</span>//api.bigcommerce.com</code></pre></div>\n<h4 id=\"push-it-gurl\" style=\"position:relative;\"><a href=\"#push-it-gurl\" aria-label=\"push it gurl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Push It Gurl</h4>\n<p>The last thing to do is push the theme with the Stencil CLI. We use the aforementioned <code class=\"language-text\">-a</code> &#x26; <code class=\"language-text\">-d</code> flags to <strong>A</strong>ctivate a specific variation (in our case the variant called \"Light\") of the theme and to <strong>D</strong>elete the oldest unused theme (there is a limit to how many themes you can have uploaded to BigCommerce at one time).</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n\n  <span class=\"token punctuation\">...</span>\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Push Theme\n    <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n      stencil push -a Light -d</span></code></pre></div>\n<h2 id=\"thats-all-folks\" style=\"position:relative;\"><a href=\"#thats-all-folks\" aria-label=\"thats all folks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>That's All Folks</h2>\n<p>After that all you have to do is commit the workflow file to your repo and push it up to Github. As soon as it's in there, github will take that commit and run your Workflow against it.</p>\n<p>Be Careful Though, because at this point anything you push to your <code class=\"language-text\">main</code> branch will get automatically pushed to your live site. Make sure to follow good Git practices and only commit to the <code class=\"language-text\">main</code> branch PRODUCTION READY CODE. That is the beauty of using Git in your CI/CD Workflow because if you break something it's super simple to roll back the <code class=\"language-text\">main</code> branch to the previous commit, make your fixes and try again.</p>\n<h2 id=\"the-full-code\" style=\"position:relative;\"><a href=\"#the-full-code\" aria-label=\"the full code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Full Code</h2>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Push Stencil Theme To BigCommerce\n<span class=\"token comment\"># This workflow is triggered on pushes to the Main Branch only.</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Stencil Push\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set Node version to 14\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">14</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npm install -g @bigcommerce/stencil-cli\n          yarn</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Connect to store\n            <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">URL</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.STENCIL_STORE_URL <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n              <span class=\"token key atrule\">TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.STENCIL_ACCESS_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n            <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> stencil init <span class=\"token punctuation\">-</span>u $URL <span class=\"token punctuation\">-</span>t $TOKEN <span class=\"token punctuation\">-</span>p 3000 <span class=\"token punctuation\">-</span>h https<span class=\"token punctuation\">:</span>//api.bigcommerce.com\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Push Theme\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          stencil push -a Light -d</span></code></pre></div>\n<h2 id=\"taking-the-bigcommerce-cicd-flow-a-step-further\" style=\"position:relative;\"><a href=\"#taking-the-bigcommerce-cicd-flow-a-step-further\" aria-label=\"taking the bigcommerce cicd flow a step further permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Taking The BigCommerce CI/CD Flow A Step Further</h2>\n<p>Once you get settled into a CI/CD flow that works for you and your clients, here are a handful of ideas to extend it:</p>\n<ol>\n<li>Connect the workflow to send work to both a staging and production site.</li>\n<li>Setup an NPM / Yarn Cache to save time installing all the different dependencies.</li>\n<li>Modify the theme name with things like the date and the Pull Request info to connect the theme names back to the repo.</li>\n<li>Create a separate <a href=\"/blog/github-actions-cron/\">GitHub action that uses CRON</a> to regularly pull in the live theme on the store, capturing any changes your client made directly through the theme editor.</li>\n</ol>\n<p>And pretty much anything else you can think of that you can accomplish with GitHub Actions. Automating the deploy process makes it so much easier to focus on fixing bugs and building new features, instead of wasting time manually deploying new changes.</p>\n<blockquote>\n<p><span>Featured Image by <a href=\"https://unsplash.com/@martinadams?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Martin Adams</a> on <a href=\"https://unsplash.com/s/photos/piping?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></p>\n</blockquote>","excerpt":"Post Updated November 21st, 2022 to work with Stencil-CLI >5.x Back in November 2019, GitHub released GitHub Actions. An \"API for cause and effect…","wordCount":{"words":1288},"frontmatter":{"date":"August 01, 2020","updated":"February 19, 2024","title":"BigCommerce Stencil CI/CD with GitHub Actions","subtitle":"Publish Your Theme on Every Commit to Main","tags":["BigCommerce","E-Commerce","Git","Automation","Newsletter"],"featuredImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/bigcommerce-stencil-ci-cd-with-github-actions/martin-adams-a_PDPUPuNZ8-unsplash.jpg","childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d8d8d8","images":{"fallback":{"src":"/static/e26ae245f60e09086890e12c5f409ce1/5267c/martin-adams-a_PDPUPuNZ8-unsplash.jpg","srcSet":"/static/e26ae245f60e09086890e12c5f409ce1/7284f/martin-adams-a_PDPUPuNZ8-unsplash.jpg 750w,\n/static/e26ae245f60e09086890e12c5f409ce1/29ba9/martin-adams-a_PDPUPuNZ8-unsplash.jpg 1080w,\n/static/e26ae245f60e09086890e12c5f409ce1/c8896/martin-adams-a_PDPUPuNZ8-unsplash.jpg 1366w,\n/static/e26ae245f60e09086890e12c5f409ce1/5267c/martin-adams-a_PDPUPuNZ8-unsplash.jpg 1920w","sizes":"100vw"},"sources":[{"srcSet":"/static/e26ae245f60e09086890e12c5f409ce1/57584/martin-adams-a_PDPUPuNZ8-unsplash.webp 750w,\n/static/e26ae245f60e09086890e12c5f409ce1/984df/martin-adams-a_PDPUPuNZ8-unsplash.webp 1080w,\n/static/e26ae245f60e09086890e12c5f409ce1/4a276/martin-adams-a_PDPUPuNZ8-unsplash.webp 1366w,\n/static/e26ae245f60e09086890e12c5f409ce1/9c00f/martin-adams-a_PDPUPuNZ8-unsplash.webp 1920w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6666666666666666}}},"ogImage":null},"fields":{"externalLink":"","externalLinkLabel":"Check It Out »","slug":"/blog/bigcommerce-stencil-ci-cd-with-github-actions/","ogImage":"","date":"February 19, 2024","unlisted":false}}},"pageContext":{"slug":"/blog/bigcommerce-stencil-ci-cd-with-github-actions/","newsletter":true,"related":[{"id":"e01a9a00-958e-5c19-8bba-c32b63dad267","excerpt":"Allowing SVG Files in WordPress so you can upload them through the Media panel is surprisingly simple. This allows you to harness the power…","fields":{"date":"2018-11-28T21:41:18.000Z","slug":"/blog/upload-svg-files-to-wordpress/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Upload SVG Files To WordPress","subtitle":"","tags":["WordPress"],"published":true,"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e81868","images":{"fallback":{"src":"/static/124be52bbf346d8c60c354150e3cbdd7/83513/featuredImage.png","srcSet":"/static/124be52bbf346d8c60c354150e3cbdd7/524f8/featuredImage.png 172w,\n/static/124be52bbf346d8c60c354150e3cbdd7/9c87a/featuredImage.png 344w,\n/static/124be52bbf346d8c60c354150e3cbdd7/83513/featuredImage.png 687w,\n/static/124be52bbf346d8c60c354150e3cbdd7/f8354/featuredImage.png 1374w","sizes":"(min-width: 687px) 687px, 100vw"},"sources":[{"srcSet":"/static/124be52bbf346d8c60c354150e3cbdd7/fa0cb/featuredImage.webp 172w,\n/static/124be52bbf346d8c60c354150e3cbdd7/470f7/featuredImage.webp 344w,\n/static/124be52bbf346d8c60c354150e3cbdd7/a5f32/featuredImage.webp 687w,\n/static/124be52bbf346d8c60c354150e3cbdd7/a73ea/featuredImage.webp 1374w","type":"image/webp","sizes":"(min-width: 687px) 687px, 100vw"}]},"width":687,"height":350}}}}},{"id":"ca0a94c2-dd58-5e72-be18-29d950552916","excerpt":"Now that June is in the books and things have pretty much settled, I'm getting into my new routine and I'm LOVING it. I basically just wake…","fields":{"date":"2021-07-03T19:55:35.566Z","slug":"/blog/freelance-month-2/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Focus On What's Paying You","subtitle":"My 2nd Month As A Freelancer","tags":["Freelance","Career","Newsletter"],"published":true,"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f898c8","images":{"fallback":{"src":"/static/dccf2005a1478cded487e8283e3b2de1/6b695/featuredImage.png","srcSet":"/static/dccf2005a1478cded487e8283e3b2de1/2141d/featuredImage.png 132w,\n/static/dccf2005a1478cded487e8283e3b2de1/7d3c7/featuredImage.png 263w,\n/static/dccf2005a1478cded487e8283e3b2de1/6b695/featuredImage.png 526w,\n/static/dccf2005a1478cded487e8283e3b2de1/c683a/featuredImage.png 1052w","sizes":"(min-width: 526px) 526px, 100vw"},"sources":[{"srcSet":"/static/dccf2005a1478cded487e8283e3b2de1/87113/featuredImage.webp 132w,\n/static/dccf2005a1478cded487e8283e3b2de1/90103/featuredImage.webp 263w,\n/static/dccf2005a1478cded487e8283e3b2de1/328c9/featuredImage.webp 526w,\n/static/dccf2005a1478cded487e8283e3b2de1/30766/featuredImage.webp 1052w","type":"image/webp","sizes":"(min-width: 526px) 526px, 100vw"}]},"width":526,"height":350}}}}},{"id":"64fa761f-404d-5685-beaa-3f94e6010841","excerpt":"When building or modifying BigCommerce's Open Source checkout-js, the only way the docs claim you can access the locally running version of…","fields":{"date":"2024-01-21T05:10:04.544Z","slug":"/blog/working-on-a-bigcommerce-custom-checkout-locally/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Working On A BigCommerce Custom Checkout Locally","subtitle":"Without Breaking Your Store's Live Checkout","tags":["BigCommerce","React"],"published":true,"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181828","images":{"fallback":{"src":"/static/2baa625f612c08834e3070aa5d45db72/d0e56/ramiro-mendes-sMCBEI5zkqc-unsplash.jpg","srcSet":"/static/2baa625f612c08834e3070aa5d45db72/b6c87/ramiro-mendes-sMCBEI5zkqc-unsplash.jpg 131w,\n/static/2baa625f612c08834e3070aa5d45db72/320b8/ramiro-mendes-sMCBEI5zkqc-unsplash.jpg 262w,\n/static/2baa625f612c08834e3070aa5d45db72/d0e56/ramiro-mendes-sMCBEI5zkqc-unsplash.jpg 523w,\n/static/2baa625f612c08834e3070aa5d45db72/5ce16/ramiro-mendes-sMCBEI5zkqc-unsplash.jpg 1046w","sizes":"(min-width: 523px) 523px, 100vw"},"sources":[{"srcSet":"/static/2baa625f612c08834e3070aa5d45db72/77115/ramiro-mendes-sMCBEI5zkqc-unsplash.webp 131w,\n/static/2baa625f612c08834e3070aa5d45db72/1d159/ramiro-mendes-sMCBEI5zkqc-unsplash.webp 262w,\n/static/2baa625f612c08834e3070aa5d45db72/f14ab/ramiro-mendes-sMCBEI5zkqc-unsplash.webp 523w,\n/static/2baa625f612c08834e3070aa5d45db72/1de32/ramiro-mendes-sMCBEI5zkqc-unsplash.webp 1046w","type":"image/webp","sizes":"(min-width: 523px) 523px, 100vw"}]},"width":523,"height":350}}}}}]}},"staticQueryHashes":["3649515864","764694655"],"slicesMap":{}}