{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/gutenberg-selectcontrol-not-saving-attributes/","result":{"data":{"markdownRemark":{"html":"<h2>SetAttributes() Doesn't Automatically Convert Types</h2>\n<p>I was using a SelectControl to set a Category ID for a specific Gutenberg block I was building. Turns out the <code class=\"language-text\">setAttribute()</code> function doesn't automatically convert types. The SelectControl returns the value as a string, &#x26; since the attribute was expecting a Number:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The attribute wasn't getting saved as anything.</p>\n<h2>A Few Solutions</h2>\n<p>The easiest way to solve this is just convert the String value to a Number with <code class=\"language-text\">parseInt()</code> when setting the Attribute:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChangeCat1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Other than that you can adjust your attribute type to just accept a string, however given that WordPress expects Post IDs to be Numbers this probably isn't the best solution:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Conclusion</h2>\n<p>Make sure you're saving your attributes as the appropriate type, (Number, String, Boolean, etc.) and WordPress Gutenberg should stop giving you issues. Hit me up on Twitter <a href=\"https://twitter.com/jackharner\">@JackHarner</a> if you have any other WordPress related questions.</p>","excerpt":"SetAttributes() Doesn't Automatically Convert Types I was using a SelectControl to set a Category ID for a specific Gutenberg block I was building…","wordCount":{"words":143},"frontmatter":{"date":"March 15, 2022","updated":null,"title":"SelectControl Not Saving Attributes","subtitle":"Troubleshooting and Fixing A Custom Gutenberg Block","tags":["WordPress"],"featuredImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/gutenberg-selectcontrol-not-saving-attributes/featuredImage.png","childImageSharp":{"original":{"src":"/static/featuredImage-af0bb5be96a29883f616acee4e8a72c7.png"}}},"ogImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/gutenberg-selectcontrol-not-saving-attributes/featuredImage.png","childImageSharp":{"original":{"src":"/static/featuredImage-af0bb5be96a29883f616acee4e8a72c7.png"}}}},"fields":{"externalLink":"","externalLinkLabel":"Check It Out »","slug":"/blog/gutenberg-selectcontrol-not-saving-attributes/","ogImage":"./featuredImage.png","date":"March 15, 2022","unlisted":false}}},"pageContext":{"slug":"/blog/gutenberg-selectcontrol-not-saving-attributes/","related":[{"id":"e8cd2995-c17b-5529-8313-c2c2ac8d649c","excerpt":"Turn On The Custom Admin Menu Hook The  hook is a simple hook that just tells WordPress you want to display the Admin menu in a custom order…","fields":{"date":"2022-07-20T15:55:43.658Z","slug":"/blog/custom-menu-order-wordpress-admin/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Custom Menu Order in the WordPress Admin","subtitle":"","tags":["WordPress"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/bd3971d6e6803772aaef03ec4cd1a817/5ff92/lan-deng-CFKwL570ZSc-unsplash.jpg"}}}}},{"id":"982894de-5729-54c3-b517-202f6ab89266","excerpt":"CSS Animations are an easy, lightweight way to add a little motion and excitement to a page. You definitely don't want to overdo it, though…","fields":{"date":"2020-03-28T17:02:50.298Z","slug":"/blog/pausing-css-animations-on-hover/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Pausing CSS Animations on Hover","subtitle":"Without Any JavaScript","tags":["CSS","Animation"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/d3bd4a8a2786e50282276c1a3968821d/5ff92/erwan-hesry-IqB5MPcQp6k-unsplash.jpg"}}}}},{"id":"2cf50020-f31f-5b7f-b1e4-9ee941e40093","excerpt":"At Shoolu, we take advantage of Custom Fields on products in BigCommerce all the time. Our inventory software runs some rules against the…","fields":{"date":"2020-06-09T16:35:09.669Z","slug":"/blog/get-custom-field-by-name-bigcommerce-stencil/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Custom Fields By Name","subtitle":"In BigCommerce Stencil Themes","tags":["BigCommerce","Tutorial"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/1d3a10e71aba0aa2c3229f08e3521000/5ff92/featured-image.jpg"}}}}},{"id":"a32d4c5e-5360-598f-8ef5-b03985a62c41","excerpt":"Post Updated November 21st, 2022 to work with Stencil-CLI >5.x Back in November 2019, GitHub released GitHub Actions. An \"API for cause and…","fields":{"date":"2022-11-21T11:43:40.000Z","slug":"/blog/bigcommerce-stencil-ci-cd-with-github-actions/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"BigCommerce Stencil CI/CD with GitHub Actions","subtitle":"Publish Your Theme on Every Commit to Main","tags":["BigCommerce","E-Commerce","Git","Automation","Newsletter"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/e26ae245f60e09086890e12c5f409ce1/5ff92/martin-adams-a_PDPUPuNZ8-unsplash.jpg"}}}}}]}},"staticQueryHashes":["3649515864","764694655"]}