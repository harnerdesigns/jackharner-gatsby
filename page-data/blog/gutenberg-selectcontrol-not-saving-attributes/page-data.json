{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blog/gutenberg-selectcontrol-not-saving-attributes/",
    "result": {"data":{"markdownRemark":{"html":"<h2>SetAttributes() Doesn't Automatically Convert Types</h2>\n<p>I was using a SelectControl to set a Category ID for a specific Gutenberg block I was building. Turns out the <code class=\"language-text\">setAttribute()</code> function doesn't automatically convert types. The SelectControl returns the value as a string, &#x26; since the attribute was expecting a Number:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The attribute wasn't getting saved as anything.</p>\n<h2>A Few Solutions</h2>\n<p>The easiest way to solve this is just convert the String value to a Number with <code class=\"language-text\">parseInt()</code> when setting the Attribute:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChangeCat1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Other than that you can adjust your attribute type to just accept a string, however given that WordPress expects Post IDs to be Numbers this probably isn't the best solution:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Conclusion</h2>\n<p>Make sure you're saving your attributes as the appropriate type, (Number, String, Boolean, etc.) and WordPress Gutenberg should stop giving you issues. Hit me up on Twitter <a href=\"https://twitter.com/jackharner\">@JackHarner</a> if you have any other WordPress related questions.</p>","excerpt":"SetAttributes() Doesn't Automatically Convert Types I was using a SelectControl to set a Category ID for a specific Gutenberg block I was building…","wordCount":{"words":143},"frontmatter":{"date":"March 15, 2022","updated":null,"title":"SelectControl Not Saving Attributes","subtitle":"Troubleshooting and Fixing A Custom Gutenberg Block","tags":["WordPress"],"featuredImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/gutenberg-selectcontrol-not-saving-attributes/featuredImage.png","childImageSharp":{"original":{"src":"/static/featuredImage-af0bb5be96a29883f616acee4e8a72c7.png"}}},"ogImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/gutenberg-selectcontrol-not-saving-attributes/featuredImage.png","childImageSharp":{"original":{"src":"/static/featuredImage-af0bb5be96a29883f616acee4e8a72c7.png"}}}},"fields":{"externalLink":"","externalLinkLabel":"Check It Out »","slug":"/blog/gutenberg-selectcontrol-not-saving-attributes/","ogImage":"./featuredImage.png","date":"March 15, 2022","unlisted":false}}},"pageContext":{"slug":"/blog/gutenberg-selectcontrol-not-saving-attributes/","related":[{"id":"cd2ef220-3a1a-5963-8ca0-b83675d04188","excerpt":"NPM (Node Package Manager) and Yarn are both JavaScript based package managers for ease of installing 3rd Party Tools & Libraries into your…","fields":{"date":"2020-01-19T18:32:31.115Z","slug":"/blog/yarn-vs-npm/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Yarn vs. NPM","subtitle":"PACKAGE MANAGER THROWDOWN","tags":["Node"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/c9bf9e79ce9ffd0feaf00bb3905b52cf/5ff92/featuredImage.jpg"}}}}},{"id":"f861f4a3-3850-55ae-81d1-b2d67aa4088d","excerpt":"Shopify is the most customizable e-commerce platform, while still being super user friendly out of the box. Like yes, hypothetically you can…","fields":{"date":"2022-01-08T02:35:50.953Z","slug":"/blog/organize-your-shopify-settings/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Organize Your Shopify Theme & Section Settings","subtitle":"","tags":["Shopify","E-Commerce"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/2c5b9d2015432d858a54c43ca43b1be3/f969e/featuredImage.png"}}}}},{"id":"8789d4d2-49f4-54ce-9c7b-1bdb885fa7ad","excerpt":"Somehow I continuously run into File Permissions Issues while working with WordPress, so this is primarily just a reference for myself. For…","fields":{"date":"2021-07-19T07:12:18.953Z","slug":"/blog/reset-wordpress-file-permissions/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Reset WordPress File Permissions","subtitle":"","tags":["WordPress","Automation","Code Snippets"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/743cf2f79a767cb799303a916f197138/f969e/featuredImage.png"}}}}},{"id":"0ba8f01c-9cee-5935-806c-0fe01667c902","excerpt":"DigitalOcean is a cloud infrastructure company based in New York City. They have blazing fast data centers all over the world and are my…","fields":{"date":"2021-05-18T17:12:33.962Z","slug":"/blog/getting-started-with-digital-ocean/","collection":"blog","published":true,"externalLink":"https://m.do.co/c/66cca12b82bc","externalLinkLabel":"Create An Account On  DigitalOcean"},"frontmatter":{"title":"Getting Started With DigitalOcean","subtitle":"Setting Up A Team & Sharing Access","tags":["Tutorial","DigitalOcean"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/a99b7577bcb222b2e967baf3d1e0b55b/5ff92/featuredImage.jpg"}}}}}]}},
    "staticQueryHashes": ["3649515864","764694655"]}