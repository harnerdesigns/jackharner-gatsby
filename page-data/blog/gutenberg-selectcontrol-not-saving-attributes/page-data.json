{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/gutenberg-selectcontrol-not-saving-attributes/","result":{"data":{"markdownRemark":{"html":"<h2>SetAttributes() Doesn't Automatically Convert Types</h2>\n<p>I was using a SelectControl to set a Category ID for a specific Gutenberg block I was building. Turns out the <code class=\"language-text\">setAttribute()</code> function doesn't automatically convert types. The SelectControl returns the value as a string, &#x26; since the attribute was expecting a Number:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The attribute wasn't getting saved as anything.</p>\n<h2>A Few Solutions</h2>\n<p>The easiest way to solve this is just convert the String value to a Number with <code class=\"language-text\">parseInt()</code> when setting the Attribute:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChangeCat1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Other than that you can adjust your attribute type to just accept a string, however given that WordPress expects Post IDs to be Numbers this probably isn't the best solution:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Conclusion</h2>\n<p>Make sure you're saving your attributes as the appropriate type, (Number, String, Boolean, etc.) and WordPress Gutenberg should stop giving you issues. Hit me up on Twitter <a href=\"https://twitter.com/jackharner\">@JackHarner</a> if you have any other WordPress related questions.</p>","excerpt":"SetAttributes() Doesn't Automatically Convert Types I was using a SelectControl to set a Category ID for a specific Gutenberg block I was building…","wordCount":{"words":143},"frontmatter":{"date":"March 15, 2022","updated":null,"title":"SelectControl Not Saving Attributes","subtitle":"Troubleshooting and Fixing A Custom Gutenberg Block","tags":["WordPress"],"featuredImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/gutenberg-selectcontrol-not-saving-attributes/featuredImage.png","childImageSharp":{"original":{"src":"/static/featuredImage-af0bb5be96a29883f616acee4e8a72c7.png"}}},"ogImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/gutenberg-selectcontrol-not-saving-attributes/featuredImage.png","childImageSharp":{"original":{"src":"/static/featuredImage-af0bb5be96a29883f616acee4e8a72c7.png"}}}},"fields":{"externalLink":"","externalLinkLabel":"Check It Out »","slug":"/blog/gutenberg-selectcontrol-not-saving-attributes/","ogImage":"./featuredImage.png","date":"March 15, 2022","unlisted":false}}},"pageContext":{"slug":"/blog/gutenberg-selectcontrol-not-saving-attributes/","related":[{"id":"982894de-5729-54c3-b517-202f6ab89266","excerpt":"CSS Animations are an easy, lightweight way to add a little motion and excitement to a page. You definitely don't want to overdo it, though…","fields":{"date":"2020-03-28T17:02:50.298Z","slug":"/blog/pausing-css-animations-on-hover/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Pausing CSS Animations on Hover","subtitle":"Without Any JavaScript","tags":["CSS","Animation"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/d3bd4a8a2786e50282276c1a3968821d/5ff92/erwan-hesry-IqB5MPcQp6k-unsplash.jpg"}}}}},{"id":"7a366d18-c441-50e6-99ff-ca44a93a8c1e","excerpt":"Have you ever had a JavaScript object that you needed to extract a bunch of different values out of? Today I'd like to introduce you to your…","fields":{"date":"2020-10-18T16:47:36.345Z","slug":"/blog/destructuring-and-nested-destructuring-in-es6/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Destructuring and Nested Destructuring in ES6","subtitle":"","tags":["JavaScript","Newsletter"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/aeec27123ae5c68737ebbccf0ee1c21b/5ff92/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.jpg"}}}}},{"id":"bfeeada3-0a1c-5f16-98ec-53a957780a04","excerpt":"I read this great article from @swizec about how he made almost $400k over 5 years on the side through books, courses and other digital…","fields":{"date":"2020-07-25T19:42:25.402Z","slug":"/blog/lets-make-a-newsletter/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Let's Make A Newsletter","subtitle":"Mailing Lists Are King","tags":["Newsletter"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/22e8797ae72e98b620c3c6fddb12e28e/5ff92/liam-truong-oeDH20DVb2A-unsplash.jpg"}}}}},{"id":"ee8fa99a-1147-5344-b53e-414466a0c0cc","excerpt":"WordPress Development relies on either Themes or Plugins for WordPress. Today, I'm going to walk you through the base files you need for any…","fields":{"date":"2023-01-13T00:21:19.284Z","slug":"/blog/anatomy-of-a-wordpress-theme/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Anatomy of a WordPress Theme","subtitle":"Required Template Files for Themes & Plugins","tags":["WordPress"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/38042f6e79a703904fe1f0510053da47/5ff92/joyce-mccown-LAEPsbXOhIM-unsplash.jpg"}}}}}]}},"staticQueryHashes":["3649515864","764694655"]}