{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/blog/gutenberg-selectcontrol-not-saving-attributes/",
    "result": {"data":{"markdownRemark":{"html":"<h2>SetAttributes() Doesn't Automatically Convert Types</h2>\n<p>I was using a SelectControl to set a Category ID for a specific Gutenberg block I was building. Turns out the <code class=\"language-text\">setAttribute()</code> function doesn't automatically convert types. The SelectControl returns the value as a string, &#x26; since the attribute was expecting a Number:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The attribute wasn't getting saved as anything.</p>\n<h2>A Few Solutions</h2>\n<p>The easiest way to solve this is just convert the String value to a Number with <code class=\"language-text\">parseInt()</code> when setting the Attribute:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChangeCat1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Other than that you can adjust your attribute type to just accept a string, however given that WordPress expects Post IDs to be Numbers this probably isn't the best solution:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cat1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Conclusion</h2>\n<p>Make sure you're saving your attributes as the appropriate type, (Number, String, Boolean, etc.) and WordPress Gutenberg should stop giving you issues. Hit me up on Twitter <a href=\"https://twitter.com/jackharner\">@JackHarner</a> if you have any other WordPress related questions.</p>","excerpt":"SetAttributes() Doesn't Automatically Convert Types I was using a SelectControl to set a Category ID for a specific Gutenberg block I was building…","wordCount":{"words":143},"frontmatter":{"date":"March 15, 2022","updated":null,"title":"SelectControl Not Saving Attributes","subtitle":"Troubleshooting and Fixing A Custom Gutenberg Block","tags":["WordPress"],"featuredImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/gutenberg-selectcontrol-not-saving-attributes/featuredImage.png","childImageSharp":{"original":{"src":"/static/featuredImage-af0bb5be96a29883f616acee4e8a72c7.png"}}},"ogImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/gutenberg-selectcontrol-not-saving-attributes/featuredImage.png","childImageSharp":{"original":{"src":"/static/featuredImage-af0bb5be96a29883f616acee4e8a72c7.png"}}}},"fields":{"externalLink":"","externalLinkLabel":"Check It Out »","slug":"/blog/gutenberg-selectcontrol-not-saving-attributes/","ogImage":"./featuredImage.png","date":"March 15, 2022","unlisted":false}}},"pageContext":{"slug":"/blog/gutenberg-selectcontrol-not-saving-attributes/","related":[{"id":"4d2dfd53-353f-5200-9987-ee3cee0a2d32","excerpt":"So, you want to make some changes to an Open Source Repo? Good for you. That's the beauty of Open Source, even just fixing typos in the…","fields":{"date":"2019-11-02T17:12:33.962Z","slug":"/blog/sync-forked-repo/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"I've Forked The Repo, Now What?","subtitle":"Syncing Your Repo With the Upstream Repo","tags":["Git","Open Source"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/58ffde237fbc2fe080c4616ae4f133e5/5ff92/featuredImage.jpg"}}}}},{"id":"a3d5e29c-5dc0-53b7-b8ca-b519f5d50e8d","excerpt":"MkDocs is a \"fast, simple and downright gorgeous\" static site generator for turning a collection of Markdown files into a documentation site…","fields":{"date":"2020-08-09T11:53:35.000Z","slug":"/blog/generate-a-docs-site-instantly/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Generate Documentation From Markdown AUTOMATICALLY","subtitle":"Meet MkDocs","tags":["Automation","Markdown","Python","Newsletter"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/d17fa935e155b23ff8c349c2d6a282f1/5ff92/maarten-van-den-heuvel-8EzNkvLQosk-unsplash.jpg"}}}}},{"id":"cd2ef220-3a1a-5963-8ca0-b83675d04188","excerpt":"NPM (Node Package Manager) and Yarn are both JavaScript based package managers for ease of installing 3rd Party Tools & Libraries into your…","fields":{"date":"2020-01-19T18:32:31.115Z","slug":"/blog/yarn-vs-npm/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Yarn vs. NPM","subtitle":"PACKAGE MANAGER THROWDOWN","tags":["Node"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/c9bf9e79ce9ffd0feaf00bb3905b52cf/5ff92/featuredImage.jpg"}}}}},{"id":"2cf50020-f31f-5b7f-b1e4-9ee941e40093","excerpt":"At Shoolu, we take advantage of Custom Fields on products in BigCommerce all the time. Our inventory software runs some rules against the…","fields":{"date":"2020-06-09T16:35:09.669Z","slug":"/blog/get-custom-field-by-name-bigcommerce-stencil/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Custom Fields By Name","subtitle":"In BigCommerce Stencil Themes","tags":["BigCommerce","Tutorial"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/1d3a10e71aba0aa2c3229f08e3521000/5ff92/featured-image.jpg"}}}}}]}},
    "staticQueryHashes": ["3649515864","764694655"]}