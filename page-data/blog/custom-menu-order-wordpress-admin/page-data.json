{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/custom-menu-order-wordpress-admin/","result":{"data":{"site":{"siteMetadata":{"title":"Jack Harner","description":"Jack Harner is a Freelance Web Developer & E-Commerce Consultant based in Denver, Colorado. Shopify, BigCommerce, WordPress Dev & More.","author":"@jackharner","siteUrl":"https://jackharner.com"}},"markdownRemark":{"html":"<h2>Turn On The Custom Admin Menu Hook</h2>\n<p>The <code class=\"language-text\">custom_menu_order</code> hook is a simple hook that just tells WordPress you want to display the Admin menu in a custom order. You filter it with <code class=\"language-text\">add_filter()</code> and can just use the built-in function <code class=\"language-text\">__return_true</code> to (you can probably guess) return true to the hook.</p>\n<p>Add this to your <code class=\"language-text\">functions.php</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"> <span class=\"token function\">add_filter</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'custom_menu_order'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'__return_true'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong><a href=\"https://developer.wordpress.org/reference/hooks/custom_menu_order/\">Docs</a></strong></p>\n<h2>ORDER IN THE... WordPress Admin!</h2>\n<p>Now that Custom Menu Order is turned on, it's time to actually set the order. This is controlled through the <code class=\"language-text\">menu_order</code> hook.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">add_filter</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'menu_order'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'&lt;custom_menu_order_fn_name>'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The hook sends an array of the current menu item's URLs as the only parameter. Keep in mind it is only the part of the url AFTER  <code class=\"language-text\">/wp-admin/</code>, but including all of the url parameters:</p>\n<blockquote>\n<p>For example the Pages menu links to <code class=\"language-text\">https://example.wp/wp-admin/edit.php?post_type=page</code> and you just turn it into: <code class=\"language-text\">edit.php?post_type=page</code>.</p>\n</blockquote>\n<p>You can either add and remove things individually from the Menu, or return a completely new array with only the items you want in the order you want.</p>\n<h3>Removing Posts Menu (All Posts, Add New, etc.) from WP Admin</h3>\n<p>Using the PHP function <code class=\"language-text\">array_search()</code> returns the array index for a specific value. If you wanted to remove a specific menu/submenu completely, you just search for the top level pages URL, and use PHP's <code class=\"language-text\">unset()</code> to remove the item from the array.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">jh_remove_posts_menu</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$menu_ord</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_search</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'edit.php'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$menu_ord</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$menu_ord</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$menu_ord</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add_filter</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'menu_order'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'jh_remove_posts_menu'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Totally Custom WP Admin Menu Order</h3>\n<p>Here's an example of throwing out the default menu order and returning an entirely new one.</p>\n<blockquote>\n<p>This is probably the way to go if you're going to be moving or removing more than one item from the menu. It's easier to just set the order explicitly, instead of fighting with the array the hook provides.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">jh_custom_menu_order</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$menu_ord</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n \n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string single-quoted-string\">'index.php'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Dashboard</span>\n        <span class=\"token string single-quoted-string\">'separtor1'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// First separator</span>\n        <span class=\"token string single-quoted-string\">'edit.php'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Posts</span>\n        <span class=\"token string single-quoted-string\">'edit.php?post_type=page'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Pages</span>\n        <span class=\"token string single-quoted-string\">'edit.php?post_type=&lt;custom post type>'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Custom Post Type </span>\n        <span class=\"token string single-quoted-string\">'separator2'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Second separator</span>\n        <span class=\"token string single-quoted-string\">'upload.php'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Media</span>\n        <span class=\"token string single-quoted-string\">'edit-comments.php'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Comments</span>\n        <span class=\"token string single-quoted-string\">'separator3'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Third separator</span>\n        <span class=\"token string single-quoted-string\">'users.php'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Users</span>\n        <span class=\"token string single-quoted-string\">'themes.php'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Appearance</span>\n        <span class=\"token string single-quoted-string\">'plugins.php'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Plugins</span>\n        <span class=\"token string single-quoted-string\">'tools.php'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Tools</span>\n        <span class=\"token string single-quoted-string\">'options-general.php'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Settings</span>\n        <span class=\"token string single-quoted-string\">'separator-last'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Last separator</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n <span class=\"token function\">add_filter</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'menu_order'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'jh_custom_menu_order'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The order of the items in the array determines the order of the menu. You can add and leave out any pages that are accessible from the WordPress Admin.</p>\n<p>Don't worry though, the menu still respects User Role Capabilities, so if you add the Settings menu, it still only shows up for the Administrator role.</p>\n<h2>Order Array of Core WordPress Pages</h2>\n<p>As of WordPress v6.0.1, this is the default menu order that gets passed to your <code class=\"language-text\">menu_order</code> filter function:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'index.php'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'separator1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'edit.php'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'upload.php'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'edit.php?post_type=page'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'edit-comments.php'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'separator2'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'themes.php'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'plugins.php'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'users.php'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'tools.php'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'options-general.php'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'separator-last'</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">]</span></code></pre></div>","excerpt":"Turn On The Custom Admin Menu Hook The  hook is a simple hook that just tells WordPress you want to display the Admin menu in a custom order. You…","wordCount":{"words":347},"frontmatter":{"date":"July 20, 2022","updated":null,"title":"Custom Menu Order in the WordPress Admin","subtitle":"","tags":["WordPress"],"featuredImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/custom-menu-order-wordpress-admin/lan-deng-CFKwL570ZSc-unsplash.jpg","childImageSharp":{"original":{"src":"/static/lan-deng-CFKwL570ZSc-unsplash-bd3971d6e6803772aaef03ec4cd1a817.jpg"}}},"ogImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/custom-menu-order-wordpress-admin/ogImage.png","childImageSharp":{"original":{"src":"/static/ogImage-5909de2eb77f5000b97371ccc5e62e0c.png"}}}},"fields":{"externalLink":"","externalLinkLabel":"Check It Out »","slug":"/blog/custom-menu-order-wordpress-admin/","ogImage":"./ogImage.png","date":"July 20, 2022","unlisted":false}}},"pageContext":{"slug":"/blog/custom-menu-order-wordpress-admin/","related":[{"id":"1732511e-0852-527d-b359-940d470ea8b0","excerpt":"After wanting one for some time, I finally caved and bought a Raspberry Pi. I got the Pi 4 Model B, the latest and greatest. It boasts the…","fields":{"date":"2020-05-30T02:06:06.076Z","slug":"/blog/i-just-got-a-raspberry-pi/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"I Just Got A Raspberry Pi","subtitle":"PiHole, DNS, Oh My!","tags":["Raspberry Pi","Linux"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/f981484910e686b1685b12026887ba82/5ff92/featuredImage.jpg"}}}}},{"id":"3319de6e-9091-56e3-b3b9-4173755f07fa","excerpt":"Sometimes when you're working with graphic design you end up working on a piece that's meant to be displayed on a non-white background, like…","fields":{"date":"2023-01-13T00:24:21.343Z","slug":"/blog/setting-the-artboard-background-color-in-adobe-illustrator/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Setting The Artboard Background Color In Adobe Illustrator","subtitle":"","tags":["Graphic Design","Illustrator"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/124be52bbf346d8c60c354150e3cbdd7/f969e/featuredImage.png"}}}}},{"id":"0c886846-cb1e-543e-8d0a-c79c0f6ecf77","excerpt":"JackHarner.com is built with Gatsby, a framework based on React that makes blazing fast websites. Gatsby Logo I have my Blog and Portfolio…","fields":{"date":"2019-12-22T18:23:53.017Z","slug":"/blog/auto-generate-content-gatsby/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Auto-Generate Content Folders In Gatsby","subtitle":"Preformat Your Frontmatter & More","tags":["Gatsby","Node","Automation"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/bc2a937d47ea91cb852001a44e11cff7/5ff92/featuredImage.jpg"}}}}},{"id":"ee8fa99a-1147-5344-b53e-414466a0c0cc","excerpt":"WordPress Development relies on either Themes or Plugins for WordPress. Today, I'm going to walk you through the base files you need for any…","fields":{"date":"2023-01-13T00:21:19.284Z","slug":"/blog/anatomy-of-a-wordpress-theme/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Anatomy of a WordPress Theme","subtitle":"Required Template Files for Themes & Plugins","tags":["WordPress"],"published":true,"featuredImage":{"childImageSharp":{"resize":{"src":"/static/38042f6e79a703904fe1f0510053da47/5ff92/joyce-mccown-LAEPsbXOhIM-unsplash.jpg"}}}}}]}},"staticQueryHashes":["3649515864","764694655"]}