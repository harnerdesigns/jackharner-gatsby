{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/destructuring-and-nested-destructuring-in-es6//","result":{"data":{"site":{"siteMetadata":{"title":"Jack Harner","description":"Jack Harner is a Freelance Web Developer & E-Commerce Consultant based in Denver, Colorado. Shopify, BigCommerce, WordPress Dev & More.","author":"@jackharner","siteUrl":"https://jackharner.com"}},"markdownRemark":{"html":"<p>Have you ever had a JavaScript object that you needed to extract a bunch of different values out of? Today I'd like to introduce you to your new best friend: ES6 Destructuring.</p>\n<p>ES6 brings with it a bunch of nifty new ways to do things with JavaScript. One of the things I use ALL THE TIME is Destructuring. It allows you to pick and choose properties out of an object and automatically assign them to a variable.</p>\n<p>Take the following JavaScript Object for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Previously, if you needed to use and manipulate the different properties of that object you would have to assign each variable manually:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n  age <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span>\n  married <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span>married\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>married<span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>Now let's do that again with ES6. You'll find it's a whole lot cleaner.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> married <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> person\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 26</span></code></pre></div>\n<h2 id=\"not-just-objects-either\" style=\"position:relative;\"><a href=\"#not-just-objects-either\" aria-label=\"not just objects either permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Not Just Objects Either!</h2>\n<p>Destructuring is not just for Objects, you can even use it on an Array!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> people <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Jon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jovi\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> third<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> people\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Bon\"</span></code></pre></div>\n<p>It assigns the items in your array, in order, to the corresponding variable in the destructuring array.</p>\n<p>If, for whatever reason, you need to skip the first two items in the array you can do so with just a comma:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> people <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Jon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jovi\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> only<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> people\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>only<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Jovi\"</span></code></pre></div>\n<p>{{{vert}}}</p>\n<h2 id=\"nested-destructuring\" style=\"position:relative;\"><a href=\"#nested-destructuring\" aria-label=\"nested destructuring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nested Destructuring</h2>\n<p>In the real world, you're probably going to have more complex objects than just that, so let's take a look at a more complex object example.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Robert\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">spouse</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Roberta\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">anniversary</span><span class=\"token operator\">:</span> <span class=\"token string\">\"01-01-1970\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">kids</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Given this more in depth Object, how would you go about getting <em>just</em> Robert's spouse's name? Any Ideas? With a little magical thing called \"Nested Destructuring\".</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">spouse</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> person\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Roberta\"</span></code></pre></div>\n<p>With Nested Destructuring, you can cherry pick properties to get from as many levels down in your object as you need. Obviously this can get pretty messy pretty quickly so feel free to destructure more than once if order to keep your code clean.</p>\n<p>Keep in mind, when you destructure down into a property, like the example above, it does not set the variable of the property you went down in to. So in this case both <code class=\"language-text\">spouse</code> and <code class=\"language-text\">married</code> are undefined.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">spouse</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> person\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>spouse<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<p>If you need <code class=\"language-text\">spouse</code> and <code class=\"language-text\">name</code> as separate variables you will have to destructure more than once:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> spouse <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> person\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> spouse\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>spouse<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {name: \"Roberta\", age: 62}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Roberta\"</span></code></pre></div>\n<h2 id=\"what-if-i-need-to-destructure-to-a-different-variable-name\" style=\"position:relative;\"><a href=\"#what-if-i-need-to-destructure-to-a-different-variable-name\" aria-label=\"what if i need to destructure to a different variable name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What If I Need To Destructure To A Different Variable Name?</h2>\n<p>Sometimes in the real world, data comes in with weird property names, or you need to extract different nested properties that happen to have the same name. Don't worry though, ES6 has you covered.</p>\n<p>Let's keep using our more complex person Object and extract BOTH his and his wife's name at the same time.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Robert\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">spouse</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Roberta\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">anniversary</span><span class=\"token operator\">:</span> <span class=\"token string\">\"01-01-1970\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">kids</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Based on what we've gone over so far, your first thought might be to do something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">spouse</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> person</code></pre></div>\n<p>However if you were to try this you'd be met with a nice fat \"Duplicate Assignment\" error because you're trying to set the <code class=\"language-text\">name</code> variable twice. Babel or whatever ES6 Compiler you're using won't like that at all, so you need to define custom variable names.</p>\n<p>Check it out:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> hisName<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">married</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">spouse</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> herName <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> person\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hisName <span class=\"token operator\">+</span> <span class=\"token string\">\" Is Married To \"</span> <span class=\"token operator\">+</span> herName<span class=\"token punctuation\">)</span> \n<span class=\"token comment\">// Robert Is Married To Roberta</span></code></pre></div>\n<p>All you're doing is saying \"Take this property and extract as this specific variable\". Which when compiled to regular JavaScript for your browser it looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> hisName <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span>name\n<span class=\"token keyword\">var</span> herName <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span>married<span class=\"token punctuation\">.</span>spouse<span class=\"token punctuation\">.</span>name</code></pre></div>\n<h2 id=\"keep-it-clean-and-keep-it-simple\" style=\"position:relative;\"><a href=\"#keep-it-clean-and-keep-it-simple\" aria-label=\"keep it clean and keep it simple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keep It Clean, and Keep It Simple</h2>\n<p>Using Destructuring allows you to cleanly and simply extract properties from objects in ES6 JavaScript into variables to be manipulated and modified. Keep It Simple Stupid and hit me up on Twitter <a href=\"https://twitter.com/jackharner\">@JackHarner</a> if you learned something!</p>\n<hr>\n<h4 id=\"spanfeatured-image-by-a-hrefhttpsunsplashcomripatoutm_sourceunsplashamputm_mediumreferralamputm_contentcreditcopytextricardo-gomez-angela-on-a-hrefhttpsunsplashcomsphotosstructureutm_sourceunsplashamputm_mediumreferralamputm_contentcreditcopytextunsplashaspan\" style=\"position:relative;\"><a href=\"#spanfeatured-image-by-a-hrefhttpsunsplashcomripatoutm_sourceunsplashamputm_mediumreferralamputm_contentcreditcopytextricardo-gomez-angela-on-a-hrefhttpsunsplashcomsphotosstructureutm_sourceunsplashamputm_mediumreferralamputm_contentcreditcopytextunsplashaspan\" aria-label=\"spanfeatured image by a hrefhttpsunsplashcomripatoutm_sourceunsplashamputm_mediumreferralamputm_contentcreditcopytextricardo gomez angela on a hrefhttpsunsplashcomsphotosstructureutm_sourceunsplashamputm_mediumreferralamputm_contentcreditcopytextunsplashaspan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><span>Featured Image by <a href=\"https://unsplash.com/@ripato?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Ricardo Gomez Angel</a> on <a href=\"https://unsplash.com/s/photos/structure?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></h4>","excerpt":"Have you ever had a JavaScript object that you needed to extract a bunch of different values out of? Today I'd like to introduce you to your new best…","wordCount":{"words":538},"frontmatter":{"date":"October 18, 2020","updated":null,"title":"Destructuring and Nested Destructuring in ES6","subtitle":"","tags":["JavaScript","Newsletter"],"featuredImage":{"absolutePath":"/home/runner/work/jackharner-gatsby/jackharner-gatsby/content/blog/destructuring-and-nested-destructuring-in-es6/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.jpg","childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/static/aeec27123ae5c68737ebbccf0ee1c21b/0f582/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.jpg","srcSet":"/static/aeec27123ae5c68737ebbccf0ee1c21b/28504/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.jpg 750w,\n/static/aeec27123ae5c68737ebbccf0ee1c21b/011d0/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.jpg 1080w,\n/static/aeec27123ae5c68737ebbccf0ee1c21b/9d8b8/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.jpg 1366w,\n/static/aeec27123ae5c68737ebbccf0ee1c21b/0f582/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.jpg 1920w","sizes":"100vw"},"sources":[{"srcSet":"/static/aeec27123ae5c68737ebbccf0ee1c21b/aa691/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.webp 750w,\n/static/aeec27123ae5c68737ebbccf0ee1c21b/df102/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.webp 1080w,\n/static/aeec27123ae5c68737ebbccf0ee1c21b/3e577/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.webp 1366w,\n/static/aeec27123ae5c68737ebbccf0ee1c21b/21f51/ricardo-gomez-angel-j5gCOKZdm6I-unsplash.webp 1920w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.8802083333333333}}},"ogImage":null},"fields":{"externalLink":"","externalLinkLabel":"Check It Out »","slug":"/blog/destructuring-and-nested-destructuring-in-es6/","ogImage":"","date":"October 18, 2020","unlisted":false}}},"pageContext":{"slug":"/blog/destructuring-and-nested-destructuring-in-es6/","newsletter":true,"related":[{"id":"0f4683b9-1b9d-5b7d-b91f-1ecec3e89629","excerpt":"SmartBlocks in Roam Research I recently learned about SmartBlocks in Roam Research (my note/to-do tool of choice). SmartBlocks allow you to…","fields":{"date":"2023-06-29T23:11:21.063Z","slug":"/blog/practicing-graditude-smartblocks-roam-research/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Use It Or Lose It: Gratitude Edition","subtitle":"Practicing Gratitude with SmartBlocks in Roam Research","tags":["Newsletter","Productivity","Automation","Roam Research"],"published":true,"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/8036ac22d268f1c444cb2186b8da6dfe/def91/esther-jiao-3HqSeexXYpQ-unsplash.jpg","srcSet":"/static/8036ac22d268f1c444cb2186b8da6dfe/df91e/esther-jiao-3HqSeexXYpQ-unsplash.jpg 131w,\n/static/8036ac22d268f1c444cb2186b8da6dfe/9a46b/esther-jiao-3HqSeexXYpQ-unsplash.jpg 263w,\n/static/8036ac22d268f1c444cb2186b8da6dfe/def91/esther-jiao-3HqSeexXYpQ-unsplash.jpg 525w,\n/static/8036ac22d268f1c444cb2186b8da6dfe/2437e/esther-jiao-3HqSeexXYpQ-unsplash.jpg 1050w","sizes":"(min-width: 525px) 525px, 100vw"},"sources":[{"srcSet":"/static/8036ac22d268f1c444cb2186b8da6dfe/1b701/esther-jiao-3HqSeexXYpQ-unsplash.webp 131w,\n/static/8036ac22d268f1c444cb2186b8da6dfe/90103/esther-jiao-3HqSeexXYpQ-unsplash.webp 263w,\n/static/8036ac22d268f1c444cb2186b8da6dfe/a7b62/esther-jiao-3HqSeexXYpQ-unsplash.webp 525w,\n/static/8036ac22d268f1c444cb2186b8da6dfe/25270/esther-jiao-3HqSeexXYpQ-unsplash.webp 1050w","type":"image/webp","sizes":"(min-width: 525px) 525px, 100vw"}]},"width":525,"height":350}}}}},{"id":"ee8fa99a-1147-5344-b53e-414466a0c0cc","excerpt":"WordPress Development relies on either Themes or Plugins for WordPress. Today, I'm going to walk you through the base files you need for any…","fields":{"date":"2023-01-13T00:21:19.284Z","slug":"/blog/anatomy-of-a-wordpress-theme/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Anatomy of a WordPress Theme","subtitle":"Required Template Files for Themes & Plugins","tags":["WordPress"],"published":true,"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#989898","images":{"fallback":{"src":"/static/38042f6e79a703904fe1f0510053da47/a0d73/joyce-mccown-LAEPsbXOhIM-unsplash.jpg","srcSet":"/static/38042f6e79a703904fe1f0510053da47/48f39/joyce-mccown-LAEPsbXOhIM-unsplash.jpg 117w,\n/static/38042f6e79a703904fe1f0510053da47/ca585/joyce-mccown-LAEPsbXOhIM-unsplash.jpg 234w,\n/static/38042f6e79a703904fe1f0510053da47/a0d73/joyce-mccown-LAEPsbXOhIM-unsplash.jpg 467w,\n/static/38042f6e79a703904fe1f0510053da47/a4ddb/joyce-mccown-LAEPsbXOhIM-unsplash.jpg 934w","sizes":"(min-width: 467px) 467px, 100vw"},"sources":[{"srcSet":"/static/38042f6e79a703904fe1f0510053da47/06fe1/joyce-mccown-LAEPsbXOhIM-unsplash.webp 117w,\n/static/38042f6e79a703904fe1f0510053da47/2d022/joyce-mccown-LAEPsbXOhIM-unsplash.webp 234w,\n/static/38042f6e79a703904fe1f0510053da47/54814/joyce-mccown-LAEPsbXOhIM-unsplash.webp 467w,\n/static/38042f6e79a703904fe1f0510053da47/4246e/joyce-mccown-LAEPsbXOhIM-unsplash.webp 934w","type":"image/webp","sizes":"(min-width: 467px) 467px, 100vw"}]},"width":467,"height":350}}}}},{"id":"a0bd12f0-c461-546b-8ed8-00f6d08b9cd3","excerpt":"There are several ways to take a screenshot in Firefox. Right Click Context Menu First up you want to Right Click anywhere on the page and…","fields":{"date":"2020-01-07T17:21:21.524Z","slug":"/blog/high-dpi-firefox-screenshots/","collection":"blog","published":true,"externalLink":"","externalLinkLabel":"Check It Out »"},"frontmatter":{"title":"Take High-DPI Screenshots In Firefox","subtitle":"Perfect for Showing Off Your Work","tags":["Life Hacks","Firefox","Tutorial"],"published":true,"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#d8d8d8","images":{"fallback":{"src":"/static/c5e3299b981c66a95cadd41f3bf5111a/5f23e/featuredImage.jpg","srcSet":"/static/c5e3299b981c66a95cadd41f3bf5111a/37206/featuredImage.jpg 147w,\n/static/c5e3299b981c66a95cadd41f3bf5111a/83f4c/featuredImage.jpg 294w,\n/static/c5e3299b981c66a95cadd41f3bf5111a/5f23e/featuredImage.jpg 588w,\n/static/c5e3299b981c66a95cadd41f3bf5111a/e5cb6/featuredImage.jpg 1176w","sizes":"(min-width: 588px) 588px, 100vw"},"sources":[{"srcSet":"/static/c5e3299b981c66a95cadd41f3bf5111a/34341/featuredImage.webp 147w,\n/static/c5e3299b981c66a95cadd41f3bf5111a/5673d/featuredImage.webp 294w,\n/static/c5e3299b981c66a95cadd41f3bf5111a/bd929/featuredImage.webp 588w,\n/static/c5e3299b981c66a95cadd41f3bf5111a/3fe5c/featuredImage.webp 1176w","type":"image/webp","sizes":"(min-width: 588px) 588px, 100vw"}]},"width":588,"height":350}}}}}]}},"staticQueryHashes":["3649515864","764694655"],"slicesMap":{}}