{"componentChunkName":"component---src-templates-project-js","path":"/portfolio/shoolu-product-api/","result":{"data":{"markdownRemark":{"id":"8da854b7-8806-531f-a809-713b2b0b5cb7","html":"<p>BigCommerce has their <a href=\"https://github.com/bigcommerce/stencil-cli\">Stencil Framework</a> to build themes for their platform. I've extensively customized just about everything I can on Shoolu's Stencil Theme, but one massive thing is missing:</p>\n<h3>You can't query specific products to display</h3>\n<p>I'm sure there's some kind of technical explanation for the lack of querying ability, but I needed it, <em>so I built it</em>. </p>\n<p>By using the <code class=\"language-text\">bigcommerce-php-api</code> wrapper for the BigCommerce API I was able to build my own Endpoint. Send it a Category or Brand ID, a count, whether to search sub-categories, and a few other parameters and it'll spit back a list of product IDs.</p>\n<p>Back on the stencil theme frontend I would query the Product API, get the list of IDs back, then use BigCommerce's <code class=\"language-text\">stencil-utlils</code> library to query the individual product data and add it to the Product Card template. </p>\n<h2>Next Steps</h2>\n<ul>\n<li>Rebuild the whole project with Node/Express for a more responsive API</li>\n<li>Have the API itself return the product card/data/whatever instead of relying on the <code class=\"language-text\">stencil-utils</code> library.</li>\n<li>Package the server code up in such a way that's shareable.</li>\n</ul>\n<h2>But What About GraphQL?</h2>\n<p>BigCommerce recently launched their GraphQL \"Storefront API\". Their GraphQL does offer what I need to make this happen, but they have no way to only query products that are in stock. You'd call <code class=\"language-text\">getProductsByBrand(&quot;BRAND&quot;)</code> and it returns everything in that Brand, regardless of current inventory. </p>\n<p>Apparently this <em>is</em> something BigCommerce is working on, but as of writing it's not a viable option.</p>","frontmatter":{"title":"Shoolu Product API","description":"Filling Gaps In BigCommerce","color":"#0fb681","date":"January 07, 2020","tags":["PHP","AJAX"],"images":[{"childImageSharp":{"sizes":{"src":"/static/28d89b9aef1e628ceef1286c8d30a3b1/ee604/shoolu-product-grid.png"}}}],"logo":{"extension":"svg","publicURL":"/static/20ed27871795831b373cdedc681abde9/shoolu-logo.svg"}},"fields":{"slug":"/portfolio/shoolu-product-api/","collection":"portfolio","externalLink":"","externalLinkLabel":"Check It Out Â»"}}},"pageContext":{"slug":"/portfolio/shoolu-product-api/","related":[{"fields":{"slug":"/portfolio/shoolu-returns-portal/","collection":"portfolio","published":true},"frontmatter":{"color":"#0fb681","title":"Shoolu Returns Portal","description":"Returns As Simple As Possible","tags":["HTML","CSS"],"logo":{"publicURL":"/static/20ed27871795831b373cdedc681abde9/shoolu-logo.svg"}}},{"fields":{"slug":"/portfolio/material-color/","collection":"portfolio","published":true},"frontmatter":{"color":"#efefef","title":"Material Color Palette","description":"Chrome & Firefox Extension","tags":["HTML","Material Design"],"logo":{"publicURL":"/static/b75df55c5164d0412b04a2b15ba0374b/material-color-logo-text.svg"}}},{"fields":{"slug":"/portfolio/bleeding-coffee/","collection":"portfolio","published":true},"frontmatter":{"color":"rgb(75, 44, 32)","title":"Bleeding Coffee","description":"WordPress Affiliate Blog","tags":["WordPress","HTML","PHP"],"logo":{"publicURL":"/static/3fbc751b394d59490fc336cb8973e8c5/BleedingCoffee-logo-white.svg"}}}]}},"staticQueryHashes":["3649515864","764694655"]}