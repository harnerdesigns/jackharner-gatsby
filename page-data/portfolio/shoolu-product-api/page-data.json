{
    "componentChunkName": "component---src-templates-project-js",
    "path": "/portfolio/shoolu-product-api/",
    "result": {"data":{"markdownRemark":{"id":"4d938a06-2cca-5516-bfc2-f1e687cbfc5d","html":"<p>BigCommerce has their <a href=\"https://github.com/bigcommerce/stencil-cli\">Stencil Framework</a> to build themes for their platform. I've extensively customized just about everything I can on Shoolu's Stencil Theme, but one massive thing is missing:</p>\n<h3>You can't query specific products to display</h3>\n<p>I'm sure there's some kind of technical explanation for the lack of querying ability, but I needed it, <em>so I built it</em>.</p>\n<p>By using the <code class=\"language-text\">bigcommerce-php-api</code> wrapper for the BigCommerce API I was able to build my own Endpoint. Send it a Category or Brand ID, a count, whether to search sub-categories, and a few other parameters and it'll spit back a list of product IDs.</p>\n<p>Back on the stencil theme frontend I would query the Product API, get the list of IDs back, then use BigCommerce's <code class=\"language-text\">stencil-utlils</code> library to query the individual product data and add it to the Product Card template.</p>\n<h2>Next Steps</h2>\n<ul>\n<li>Rebuild the whole project with Node/Express for a more responsive API</li>\n<li>Have the API itself return the product card/data/whatever instead of relying on the <code class=\"language-text\">stencil-utils</code> library.</li>\n<li>Package the server code up in such a way that's shareable.</li>\n</ul>\n<h2>But What About GraphQL?</h2>\n<p>BigCommerce recently launched their GraphQL \"Storefront API\". Their GraphQL does offer what I need to make this happen, but they have no way to only query products that are in stock. You'd call <code class=\"language-text\">getProductsByBrand(\"BRAND\")</code> and it returns everything in that Brand, regardless of current inventory.</p>\n<p>Apparently this <em>is</em> something BigCommerce is working on, but as of writing it's not a viable option.</p>","wordCount":{"words":243},"frontmatter":{"title":"Shoolu Product API","description":"Filling Gaps In BigCommerce","color":"#0fb681","date":"January 07, 2020","tags":["PHP","AJAX","BigCommerce","E-Commerce"],"images":[{"childImageSharp":{"original":{"src":"/static/shoolu-product-grid-28d89b9aef1e628ceef1286c8d30a3b1.png"}}}],"logo":{"extension":"svg","publicURL":"/static/20ed27871795831b373cdedc681abde9/shoolu-logo.svg"}},"fields":{"slug":"/portfolio/shoolu-product-api/","collection":"portfolio","externalLink":"","externalLinkLabel":"Check It Out Â»"}}},"pageContext":{"slug":"/portfolio/shoolu-product-api/","related":[{"fields":{"slug":"/portfolio/dickeys-dugout/","collection":"portfolio","published":true},"frontmatter":{"color":"#2ba99c","title":"Dickey's Dugout","description":"Custom Shopify Theme","tags":["Shopify","E-Commerce"],"logo":{"publicURL":"/static/971997992170f47cff225a86715163f2/Dickeys-dugout-logo-white.svg"}}},{"fields":{"slug":"/portfolio/bottle-rocket-hot-sauce-v2/","collection":"portfolio","published":true},"frontmatter":{"color":"#e94939","title":"Bottle Rocket Hot Sauce v2","description":"SauceHub v2","tags":["Shopify","E-Commerce","Animation"],"logo":{"publicURL":"/static/307948d274e32231ac14bfce79e3d374/bottle-rocket-logo--red.svg"}}},{"fields":{"slug":"/portfolio/shoe-fitters/","collection":"portfolio","published":true},"frontmatter":{"color":"#0c5644","title":"Shoe Fitters","description":"WordPress Site","tags":["WordPress","PHP"],"logo":{"publicURL":"/static/45769e4815bb07a8df999acae6aced31/shoefitters-logo.svg"}}}]}},
    "staticQueryHashes": ["3649515864","764694655"]}