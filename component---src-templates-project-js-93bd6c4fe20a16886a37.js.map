{"version":3,"file":"component---src-templates-project-js-93bd6c4fe20a16886a37.js","mappings":"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","sources":["webpack://jackharner-gatsby/./src/components/portfolio/projectHeader.js","webpack://jackharner-gatsby/./src/templates/project.js","webpack://jackharner-gatsby/./node_modules/lodash/kebabCase.js"],"sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport _ from \"lodash\"\n\nimport { Link } from \"gatsby\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport tagIcons from \"../../templates/tags/tag-icons\"\nimport Drips from \"../atoms/drips\"\n\nconst ProjectHeader = ({ post, index, small, nolink }) => {\n  let filterTags, tags\n\n  if (post.frontmatter.tags) {\n    filterTags = post.frontmatter.tags.filter((tag, i) =>\n      i < 3 ? true : false\n    )\n    tags = (\n      <div className=\"project__tags\">\n        {filterTags.map((tag, i) => {\n          const tagLink = (tag === 'WordPress' ? `/portfolio/tags/wordpress/` :  `/portfolio/tags/${_.kebabCase(tag)}/`)\n\n          return (\n            <Link to={tagLink}>\n              <FontAwesomeIcon fixedWidth icon={tagIcons[tag]} />\n              <span>{tag}</span>\n            </Link>\n          )\n        })}\n      </div>\n    )\n  }\n  return (\n    <header\n      className={\n        \"project__header project--\" +\n        _.camelCase(post.frontmatter.title) +\n        ` ${\n          post.frontmatter.logo\n            ? \"project__header--logo\"\n            : \"project__header--no-logo\"\n        }`\n      }\n      style={{\n        background: post.frontmatter.color,\n        \"--color\": post.frontmatter.color,\n      }}\n    >\n      <Drips color=\"black\" slim />\n      {post.frontmatter.logo && (\n        <div className=\"logo__wrapper\">\n          <img\n            src={post.frontmatter.logo.publicURL}\n            className=\"logo\"\n            alt={post.frontmatter.title}\n          />\n        </div>\n      )}\n      <div className=\"header__titles\">\n\n        <Link to={post.fields.slug}>\n          <h1 className=\"project__title\">{post.frontmatter.title}</h1>\n        </Link>\n\n\n\n        {post.frontmatter.description != null ? (\n          <h4 className=\"project__description\">\n            {post.frontmatter.description}\n          </h4>\n        ) : (\n          \"\"\n        )}\n        {tags}\n      {(post.fields.unlisted ? <div className=\"project__unlisted\"><FontAwesomeIcon icon={['fab', \"android\"]} /> This Project Is Unlisted</div> : \"\")}\n      </div>\n\n    </header>\n  )\n}\n\nProjectHeader.propTypes = {\n  post: PropTypes.object,\n}\n\nProjectHeader.defaultProps = {\n  post: {},\n}\n\nexport default ProjectHeader\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ProjectCard from \"../components/portfolio/projectCard\"\nimport ProjectHeader from \"../components/portfolio/projectHeader\"\nimport Button from \"../components/atoms/button\"\nimport defaultOGImage from \"../images/jackHarner-default-OG.jpg\"\nimport _ from \"lodash\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nexport default function Template(props) {\n  const post = props.data.markdownRemark\n  const { related } = props.pageContext\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title + \" - \" + post.frontmatter.description}\n        description={\n          post.frontmatter.title +\n          \" - \" +\n          post.frontmatter.description + \", a \" +  post.frontmatter.tags[0] + \" Project By Jack Harner.\"\n        }\n        image={\n          post.fields.ogImage ? post.frontmatter.ogImage.childImageSharp.original.src : (post.frontmatter.logo\n            ? post.frontmatter.logo.publicURL\n            : defaultOGImage)\n        }\n      />\n      <ProjectHeader post={post} />\n\n      {post.fields.externalLink.includes(\"codepen\") && (\n              <section className=\"full black\">\n                <p\n                  className=\"codepen\"\n                  data-height=\"100%\"\n                  data-theme-id=\"17675\"\n                  data-default-tab=\"result\"\n                  data-user=\"jackharner\"\n                  data-slug-hash=\"jPmKGe\"\n                  style={{height: \"100vh\", boxSizing: 'border-box', display: 'flex', alignItems: 'center', justifyContent:' center', border: '2px solid', margin:\" 1em 0\", padding: \"1em\"}}\n                  data-pen-title=\"OS X\"\n                >\n                  <span>\n                    See the Pen{\" \"}\n                    <a href=\"https://codepen.io/jackharner/pen/jPmKGe\">OS X</a>{\" \"}\n                    by Jack Harner (\n                    <a href=\"https://codepen.io/jackharner\">@jackharner</a>) on{\" \"}\n                    <a href=\"https://codepen.io\">CodePen</a>.\n                  </span>\n                </p>\n\n              </section>\n            )}\n      <section className=\"half black\">\n        <main\n          className={\n            (post.frontmatter.images && post.frontmatter.images.length > 0\n              ? \"project__body\"\n              : \"project__body project__body--no-images\") + \" project--\" + _.camelCase(post.frontmatter.title)\n          }\n        >\n          {post.frontmatter.images && post.frontmatter.images.length > 0 ? (\n            <section className=\"project__images\">\n              {post.frontmatter.images.map((image, index) => {\n                console.log({image})\n                return image ? (\n                    <div className={\"img__wrapper\"}>\n                      <GatsbyImage image={image.childImageSharp.gatsbyImageData} alt=\"\" />\n                    </div>\n                  \n                  ) : (\n                    \"\"\n                    )\n                  })}\n            </section>\n          ) : (\n            \"\"\n          )}\n\n          <section className=\"project__content\">\n          {post.fields.externalLink && post.wordCount.words > 100 && (\n              <Button\n                label={post.fields.externalLinkLabel}\n                href={post.fields.externalLink}\n                size=\"large\"\n              />\n            )}\n            {post.html && (\n              <div className=\"project__text\" dangerouslySetInnerHTML={{ __html: post.html }} />\n            )}\n            {post.fields.externalLink && (\n              <Button\n                label={post.fields.externalLinkLabel}\n                href={post.fields.externalLink}\n                size=\"large\"\n              />\n            )}\n          </section>\n        </main>\n\n        <nav className=\"projectNavigation\">\n          <h3>Related Projects</h3>\n          <ul>\n            {related.map((post, index) => {\n              return (\n                <li>\n                  <ProjectCard post={post} small />\n                </li>\n              )\n            })}\n          </ul>\n        </nav>\n      </section>\n    </Layout>\n  )\n}\nexport const pageQuery = graphql`\n  query ProjectByPath($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      wordCount{\n        words\n      }\n      frontmatter {\n        title\n        description\n        color\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        images {\n          childImageSharp {\n            gatsbyImageData(layout: CONSTRAINED, width: 800, transformOptions: {fit: COVER})\n          }\n        }\n        logo {\n          extension\n          publicURL\n        }\n      }\n      fields {\n        slug\n        collection\n        externalLink\n        externalLinkLabel\n        unlisted\n      }\n    }\n  }\n`\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["ProjectHeader","_ref","filterTags","tags","post","index","small","nolink","frontmatter","filter","tag","i","React","className","map","tagLink","_kebabCase","Link","to","FontAwesomeIcon","fixedWidth","icon","tagIcons","_camelCase","title","logo","style","background","color","Drips","slim","src","publicURL","alt","fields","slug","description","unlisted","defaultProps","Template","props","data","markdownRemark","related","pageContext","Layout","SEO","image","ogImage","childImageSharp","original","defaultOGImage","externalLink","includes","height","boxSizing","display","alignItems","justifyContent","border","margin","padding","href","images","length","console","log","GatsbyImage","gatsbyImageData","wordCount","words","Button","label","externalLinkLabel","size","html","dangerouslySetInnerHTML","__html","ProjectCard","kebabCase","createCompounder","result","word","toLowerCase","module","exports"],"sourceRoot":""}