{"version":3,"file":"component---src-pages-links-js-eae2400e739da7bbfa88.js","mappings":"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","sources":["webpack://jackharner-gatsby/./src/components/atoms/drips.js","webpack://jackharner-gatsby/./src/components/pageTitle.js","webpack://jackharner-gatsby/./src/components/common/header-min.js","webpack://jackharner-gatsby/./src/components/common/footer-min.js","webpack://jackharner-gatsby/./src/components/layout-min.js","webpack://jackharner-gatsby/./src/pages/links.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Drips = ({ color, slim, wrapperHeight, svgWidth, numberPoints = 15 }) => {\n  const wrapperRef = useRef()\n  const [path, setPath] = useState(\"\")\n  const [built, setBuilt] = useState(false)\n  const [dim, setDim] = useState({ w: 0, h: 0 })\n  useEffect(() => {\n    if (!built) {\n      setPath(buildPath(calculateWavePoints(1)))\n      setBuilt(true)\n    }\n  }, [built])\n\n  let calculateWavePoints = () => {\n    var points = []\n    var pointCount = numberPoints\n    var width = 1080\n    var height = 1080\n\n    setDim({ w: width, h: height })\n\n    for (var i = 0; i <= pointCount; i++) {\n      var waveHeight = height - ((height / 2) * Math.random() + 50)\n      points.push({ x: i * (width / pointCount), y: waveHeight })\n    }\n\n    console.log({ points })\n\n    return points\n  }\n\n  let buildPath = points => {\n    var width = 1080\n    var height = 1080\n\n    setDim({ w: width, h: height })\n\n    var SVGString = \"M \" + points[0].x + \" \" + points[0].y\n\n    var cp = {\n      x: (points[1].x + points[0].x) / 2,\n      y: points[0].y,\n    }\n\n    var cp0 = {\n      x: (points[1].x + points[0].x) / 2,\n      y: points[1].y,\n    }\n\n    SVGString +=\n      \" C \" +\n      cp.x +\n      \" \" +\n      cp.y +\n      \" \" +\n      cp0.x +\n      \" \" +\n      cp0.y +\n      \" \" +\n      points[1].x +\n      \" \" +\n      points[1].y\n\n    var prevCp = cp0\n    // var inverted = -1;\n\n    for (var i = 1; i < points.length - 1; i++) {\n      var cp1 = {\n        x: (points[i + 1].x + points[i].x) / 2,\n        y: points[i].y,\n      }\n\n      var cp2 = {\n        x: (points[i + 1].x + points[i].x) / 2,\n        y: points[i + 1].y,\n      }\n\n      SVGString +=\n        \" C \" +\n        cp1.x +\n        \" \" +\n        cp1.y +\n        \" \" +\n        cp2.x +\n        \" \" +\n        cp2.y +\n        \" \" +\n        points[i + 1].x +\n        \" \" +\n        points[i + 1].y\n      prevCp = cp1\n      // inverted = -inverted;\n    }\n\n    SVGString += \" L \" + width + \" \" + height\n    SVGString += \" L 0 \" + height + \" Z\"\n    return SVGString\n  }\n  return (\n    <div\n      ref={wrapperRef}\n      id=\"svgWrapper\"\n      className={slim ? \"slim\" : \"\"}\n      style={{ height: wrapperHeight ? wrapperHeight : \"\" }}\n    >\n      <svg\n        preserveAspectRatio=\"none\"\n        viewBox={`0 0 ${dim.w} ${dim.h}`}\n        style={{ width: svgWidth ? svgWidth : \"\" }}\n      >\n        <path id=\"wave\" d={path} fill={color} />\n      </svg>\n    </div>\n  )\n}\n\nexport default Drips\n","/**\n * PageTitle component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Drips from \"./atoms/drips\"\n\nconst PageTitle = ({ children, subtitle = \"\" }) => {\n\n  return (\n    <header className=\"page-title slim pink\" >\n      <Drips color=\"black\" slim/>\n\n      <h1>{children}</h1>\n      {subtitle && <h2>{subtitle}</h2>}\n    </header>\n  )\n}\n\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default PageTitle\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport Headroom from \"react-headroom\"\n\nimport logo from \"./../../images/jackharner-logo-white-text.svg\"\n\nconst Header = ({ siteTitle }) => (\n  <Headroom calcHeightOnResize upTolerance={50}>\n    <header className=\"main_head main_head--min\">\n      <Link to=\"/\" className=\"logo\">\n        <img src={logo} alt=\"Jack Harner Logo\" />\n      </Link>\n    </header>\n  </Headroom>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { breakpoints } from \"../breakpoints\"\n\nimport FooterCTA from \"./FooterCTA\"\n\nimport MainMenu from \"./mainMenu\"\nimport SecondaryMenu from \"./secondaryMenu\"\n\nconst Footer = ({ siteTitle, footerCTA = true }) => (\n  <footer className=\"slim main_footer\">\n    {footerCTA && <FooterCTA />}\n\n    <MenuGrid>\n      <section className=\"copyright\">\n        &copy; 2020 - 2022 Jack Harner |{\" \"}\n        <a href=\"https://github.com/harnerdesigns/jackharner-gatsby\">\n          {\" \"}\n          Built With Gatsby\n        </a>\n      </section>\n    </MenuGrid>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Footer\n\nconst MenuGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  width: 100%;\n\n  @media ${breakpoints.laptopL} {\n    width: 50%;\n  }\n\n  .main_nav {\n    a {\n      width: 100%;\n    }\n  }\n`\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport \"./fontawesome\"\nimport Header from \"./common/header-min\"\nimport \"../scss/style.scss\"\nimport Footer from \"./common/footer-min\"\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport ImageGrid from \"./imageGrid\";\n\n\nconst Layout = ({ children, footerCTA }) => {\n\n  const shortcodes = { ImageGrid }\n  return (\n    <MDXProvider components={shortcodes}>\n\n      <SimpleReactLightbox>\n\n    \n      <div>\n        <Header/>\n\n        {children}\n\n        <Footer footerCTA={false} />\n      </div>\n    </SimpleReactLightbox>\n    </MDXProvider>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React, { useState, useEffect } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout-min\"\nimport PageTitle from \"../components/pageTitle\"\nimport SEO from \"../components/seo\"\n\nimport { toLower } from \"lodash\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Links = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Quick Links\" />\n      <PageTitle>Quick Links</PageTitle>\n      \n      <section className=\"slim black\">\n        <LinksGrid>\n          <Link to=\"/portfolio\" className=\"button button--large\">\n            See my Portfolio\n          </Link>\n          <Link to=\"/newsletter\" className=\"button button--large\">\n            Join my Newsletter\n          </Link>\n          <a className=\"button button--large\" href=\"https://harnerdesigns.com/shop\">\n            Shop Merch, Prints + More\n          </a>\n          <a className=\"button button--large\" href=\"https://livemusicforecast.com\">\n            Live Music Forecast\n          </a>\n        </LinksGrid>\n      </section>\n      <section className=\"socials socials--footer\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://twitter.com/jackharner\"\n          className=\"twitter\"\n        >\n          <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n        </a>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://instagram.com/jackharner\"\n          className=\"instagram\"\n        >\n          <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\n        </a>\n      </section>\n    </Layout>\n  )\n}\n\nexport default Links\n\nconst LinksGrid = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 2rem;\n  max-width: 900px;\n  margin-bottom: 2rem;\n\n  .button {\n    width: 100%;\n  }\n`\n"],"names":["color","slim","wrapperHeight","svgWidth","numberPoints","wrapperRef","useRef","useState","path","setPath","built","setBuilt","w","h","dim","setDim","useEffect","buildPath","calculateWavePoints","points","pointCount","height","i","waveHeight","Math","random","push","x","y","console","log","SVGString","cp","cp0","length","cp1","cp2","ref","id","className","style","preserveAspectRatio","viewBox","width","d","fill","children","subtitle","Header","siteTitle","calcHeightOnResize","upTolerance","Link","to","src","logo","alt","defaultProps","Footer","footerCTA","FooterCTA","MenuGrid","href","styled","breakpoints","shortcodes","ImageGrid","components","data","title","LinksGrid","target","rel","icon"],"sourceRoot":""}