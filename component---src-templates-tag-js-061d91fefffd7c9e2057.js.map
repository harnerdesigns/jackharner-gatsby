{"version":3,"sources":["webpack:///./src/components/common/topTags.js","webpack:///./src/components/portfolio/projectCard.js","webpack:///./src/templates/tags/tag-icons.js","webpack:///./src/templates/tag.js","webpack:///./src/components/pageTitle.js"],"names":["_","require","TopTags","topTags","postType","back","exclude","limit","postTypeLabels","single","plural","type","indexOf","splice","className","to","style","margin","fixedWidth","icon","map","tag","i","tagLink","kebabCase","key","tagIcons","ProjectCard","post","index","small","nolink","fields","slug","data-color","frontmatter","color","background","camelCase","title","logo","src","publicURL","alt","description","tags","defaultProps","Git","BigCommerce","Node","HTML","Firefox","WordPress","React","Twitter","Linux","JavaScript","Automation","Tutorial","Gatsby","PHP","CSS","CodePen","Markdown","Netlify","AJAX","Webpack","Photography","Animation","History","Newsletter","Python","Shopify","Writing","Cannabis","Career","TagRoute","render","posts","this","props","data","allMarkdownRemark","edges","pageContext","totalCount","Object","keys","sort","a","b","tagHeader","filter","node","length","ShowCard","card","large","Component","tagPageQuery","PageTitle","children","subtitle"],"mappings":"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","file":"component---src-templates-tag-js-061d91fefffd7c9e2057.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport tagIcons from \"../../templates/tags/tag-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nconst _ = require(\"lodash\")\n\n\nconst TopTags = ({ topTags = [], postType = null, back = false, exclude = null, limit = 6 }) => {\n\n  const postTypeLabels =\n    postType === \"portfolio\"\n      ? { single: \"Project\", plural: \"Projects\", type: \"Project\" }\n      : { single: \"Blog\", plural: \"Blog\", type: \"Blog\" };\n\n\n  if (exclude != null && topTags.indexOf(exclude) > -1) { topTags.splice(topTags.indexOf(exclude), 1) }\n\n\n\n\n  return (\n    <div className=\"top-tags\">\n      <ul>\n      {back &&\n      <li className=\"more-tags\">\n        <Link to={`/${postType}`} style={{ margin: \"0 auto 0 0.5em\" }}>\n        <FontAwesomeIcon fixedWidth icon='arrow-left' />\n\n          Back to {postTypeLabels.plural}\n        </Link></li>}\n        {topTags && topTags.map((tag, i) => {\n          const tagLink = `/${postType}/tags/${_.kebabCase(tag)}/`\n          if (i < limit && tag !== exclude) {\n            return (\n              <li className=\"top-tag\" key={i}>\n                <Link to={tagLink}>\n                  <FontAwesomeIcon fixedWidth icon={tagIcons[tag]} />\n                                        {tag}\n                </Link>\n              </li>\n            )\n          } else {return null}\n        })}\n        <li className=\"more-tags\">\n\n          <Link to={`/${postType}/tags`}>\n            <FontAwesomeIcon fixedWidth icon='ellipsis-h' />\n            {postTypeLabels.single}&nbsp;Tags\n          </Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default TopTags;","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport _ from \"lodash\"\n\nimport tagIcons from \"../../templates/tags/tag-icons\"\n\n\nimport { Link } from \"gatsby\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst ProjectCard = ({ post, index, small, nolink }) => {\n  return (\n    <Link\n      to={!nolink ? post.fields.slug : \"\"}\n      className={\"project__link project__link--\" + index}\n      data-color={post.frontmatter.color}\n      style={{ background: post.frontmatter.color }}\n    >\n      <article\n        className={\n          \"project__card project--\" +\n          _.camelCase(post.frontmatter.title) +\n          (small ? \" project__card--small\" : \"\")\n        }\n      >\n        \n\n        \n        <div className=\"logo__wrapper\">\n        {post.frontmatter.logo && <img\n            src={post.frontmatter.logo.publicURL}\n            className=\"logo\"\n            alt={post.frontmatter.title}\n          />}\n          {!post.frontmatter.logo && <h2 className=\"project__title\">{post.frontmatter.title}</h2>}\n        </div>\n\n        <div className=\"card__titles\">\n          {/* <h2 className=\"project__title\">{post.frontmatter.title}</h2> */}\n\n          {post.frontmatter.description && (\n            <h4 className=\"project__description\">\n              {post.frontmatter.description}\n            </h4>\n          )}\n        </div>\n        <ul className=\"project__tags\">\n            {post.frontmatter.tags.map((tag, index) => {\n              return index < 3 ? <li title={tag}><FontAwesomeIcon fixedWidth icon={tagIcons[tag]} />\n               <span>{tag}</span></li> : \"\"\n            })}\n          </ul>\n      </article>\n    </Link>\n  )\n}\n\nProjectCard.propTypes = {\n  post: PropTypes.object,\n}\n\nProjectCard.defaultProps = {\n  post: {},\n}\n\nexport default ProjectCard\n","const tagIcons = {\n  Git: [\"fab\", \"git-alt\"],\n  BigCommerce: \"shopping-cart\",\n  Node: [\"fab\", \"node-js\"],\n  HTML: [\"fab\", \"html5\"],\n  Firefox: [\"fab\", \"firefox-browser\"],\n  WordPress: [\"fab\", \"wordpress\"],\n  React: [\"fab\", \"react\"],\n  Twitter: [\"fab\", \"twitter\"],\n  \"Raspberry Pi\": [\"fab\", \"raspberry-pi\"],\n  Linux: [\"fab\", \"linux\"],\n  \"#DevDiscuss\": [\"fab\", \"dev\"],\n  JavaScript: [\"fab\", \"js\"],\n  \"Build Log\": \"tools\",\n  Automation: \"cogs\",\n  Tutorial: \"lightbulb\",\n  \"Open Source\": \"folder-open\",\n  Gatsby: \"glass-martini-alt\",\n  PHP: [\"fab\", \"php\"],\n  CSS: [\"fab\", \"css3-alt\"],\n  CodePen: [\"fab\", \"codepen\"],\n  Markdown: [\"fab\", \"markdown\"],\n  Netlify: \"project-diagram\",\n  AJAX: \"cloud-download-alt\",\n  \"Life Hacks\": \"hammer\",\n  \"Material Design\": \"palette\",\n  Webpack: \"box\",\n  Photography: \"camera\",\n  Animation: \"circle-notch\",\n  History: \"calendar\",\n  Newsletter: \"envelope\",\n  Python: [\"fab\", \"python\"],\n  Shopify: [\"fab\", \"shopify\"],\n  \"E-Commerce\": 'shopping-bag',\n  \"Code Snippets\": 'code',\n  Writing: \"pencil-alt\",\n  \"Non Profit\": \"tree\",\n  Cannabis: \"cannabis\",\n  Career: \"user-astronaut\"\n}\n\nexport default tagIcons\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport BlogCard from \"../components/blog/blogCard\"\nimport PageTitle from \"../components/pageTitle\"\nimport ProjectCard from \"../components/portfolio/projectCard\"\nimport TopTags from \"../components/common/topTags\"\nimport Shuffler from \"../components/verts/shuffler\"\nimport SEO from \"../components/seo\"\nimport tagIcons from \"./tags/tag-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const tag = this.props.pageContext.tag\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const postType = this.props.pageContext.postType\n\n    const postTypeLabels =\n      postType === \"portfolio\"\n        ? { single: \"Project\", plural: \"Projects\", type: \"Project\" }\n        : { single: \"Blog Post\", plural: \"Blog Posts\", type: \"Blog\" }\n\n    let topTags = this.props.pageContext.topTags\n    topTags = Object.keys(topTags).sort(function(a, b) {\n      return topTags[a] < topTags[b]\n    })\n\n    const tagHeader = <>{totalCount} {\n      totalCount === 1 ? postTypeLabels.single : postTypeLabels.plural\n    } Tagged {tag}</>\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <SEO title={`${tag} ${postTypeLabels.plural}`} />\n\n          <PageTitle>{tagHeader}</PageTitle>\n          <section className=\"slim black\">\n            <TopTags\n              topTags={topTags}\n              postType={postType}\n              back={true}\n              exclude={tag}\n            />\n          </section>\n          <main className=\"page_body page_body--grid\">\n            <div className={postType === \"blog\" ? \"blog-posts\" : \"projects\"}>\n              {posts\n                .filter(post => post.node.frontmatter.title.length > 0)\n                .map(({ node: post }, index) => {\n                  let ShowCard\n\n                  if (index % 6 === 0) {\n                    ShowCard = <Shuffler />\n                  }\n\n                  let card =\n                    postType === \"portfolio\" ? (\n                      <ProjectCard post={post} index={index} />\n                    ) : (\n                      <>\n                        <BlogCard\n                          post={post}\n                          index={index}\n                          large={(index + 1) % 5 === 0 || index === 0}\n                        />\n                        {ShowCard}\n                      </>\n                    )\n\n                  return <>{card}</>\n                })}\n              <Shuffler />\n            </div>\n          </main>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query SingleTagPage($tag: String, $postType: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: {\n        order: [DESC, DESC]\n        fields: [fields___weight, frontmatter___date]\n      }\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fields: {\n          published: { eq: true }\n          unlisted: { ne: true }\n          collection: { eq: $postType }\n        }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            subtitle\n            date(formatString: \"MMMM DD, YYYY\")\n            published\n            description\n            featuredImage {\n              childImageSharp {\n                resize(width: 500, height: 500, cropFocus: CENTER) {\n                  src\n                }\n              }\n            }\n            logo {\n              publicURL\n            }\n            tags\n            color\n          }\n          fields {\n            slug\n            collection\n            externalLink\n            published\n            unlisted\n            weight\n          }\n        }\n      }\n    }\n  }\n`\n","/**\n * PageTitle component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst PageTitle = ({ children, subtitle = \"\" }) => {\n  return (\n    <header className=\"page-title\">\n      <h1>{children}</h1>\n\n      {subtitle && <h2>{subtitle}</h2>}\n    </header>\n  )\n}\n\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default PageTitle\n"],"sourceRoot":""}